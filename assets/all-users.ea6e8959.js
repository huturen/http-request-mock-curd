import{az as L}from"./arco.726edac9.js";var ta={exports:{}};(function(a){(function(r,n,s){function l(e){var t=this,u=c();t.next=function(){var o=2091639*t.s0+t.c*23283064365386963e-26;return t.s0=t.s1,t.s1=t.s2,t.s2=o-(t.c=o|0)},t.c=1,t.s0=u(" "),t.s1=u(" "),t.s2=u(" "),t.s0-=u(e),t.s0<0&&(t.s0+=1),t.s1-=u(e),t.s1<0&&(t.s1+=1),t.s2-=u(e),t.s2<0&&(t.s2+=1),u=null}function f(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function m(e,t){var u=new l(e),o=t&&t.state,i=u.next;return i.int32=function(){return u.next()*4294967296|0},i.double=function(){return i()+(i()*2097152|0)*11102230246251565e-32},i.quick=i,o&&(typeof o=="object"&&f(o,u),i.state=function(){return f(u,{})}),i}function c(){var e=4022871197,t=function(u){u=String(u);for(var o=0;o<u.length;o++){e+=u.charCodeAt(o);var i=.02519603282416938*e;e=i>>>0,i-=e,i*=e,e=i>>>0,i-=e,e+=i*4294967296}return(e>>>0)*23283064365386963e-26};return t}n&&n.exports?n.exports=m:s&&s.amd?s(function(){return m}):this.alea=m})(L,a,!1)})(ta);var ia={exports:{}};(function(a){(function(r,n,s){function l(c){var e=this,t="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var o=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^o^o>>>8},c===(c|0)?e.x=c:t+=c;for(var u=0;u<t.length+64;u++)e.x^=t.charCodeAt(u)|0,e.next()}function f(c,e){return e.x=c.x,e.y=c.y,e.z=c.z,e.w=c.w,e}function m(c,e){var t=new l(c),u=e&&e.state,o=function(){return(t.next()>>>0)/4294967296};return o.double=function(){do var i=t.next()>>>11,d=(t.next()>>>0)/4294967296,h=(i+d)/(1<<21);while(h===0);return h},o.int32=t.next,o.quick=o,u&&(typeof u=="object"&&f(u,t),o.state=function(){return f(t,{})}),o}n&&n.exports?n.exports=m:s&&s.amd?s(function(){return m}):this.xor128=m})(L,a,!1)})(ia);var sa={exports:{}};(function(a){(function(r,n,s){function l(c){var e=this,t="";e.next=function(){var o=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^(o^o<<1))|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,c===(c|0)?e.x=c:t+=c;for(var u=0;u<t.length+64;u++)e.x^=t.charCodeAt(u)|0,u==t.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function f(c,e){return e.x=c.x,e.y=c.y,e.z=c.z,e.w=c.w,e.v=c.v,e.d=c.d,e}function m(c,e){var t=new l(c),u=e&&e.state,o=function(){return(t.next()>>>0)/4294967296};return o.double=function(){do var i=t.next()>>>11,d=(t.next()>>>0)/4294967296,h=(i+d)/(1<<21);while(h===0);return h},o.int32=t.next,o.quick=o,u&&(typeof u=="object"&&f(u,t),o.state=function(){return f(t,{})}),o}n&&n.exports?n.exports=m:s&&s.amd?s(function(){return m}):this.xorwow=m})(L,a,!1)})(sa);var ua={exports:{}};(function(a){(function(r,n,s){function l(c){var e=this;e.next=function(){var u=e.x,o=e.i,i,d;return i=u[o],i^=i>>>7,d=i^i<<24,i=u[o+1&7],d^=i^i>>>10,i=u[o+3&7],d^=i^i>>>3,i=u[o+4&7],d^=i^i<<7,i=u[o+7&7],i=i^i<<13,d^=i^i<<9,u[o]=d,e.i=o+1&7,d};function t(u,o){var i,d=[];if(o===(o|0))d[0]=o;else for(o=""+o,i=0;i<o.length;++i)d[i&7]=d[i&7]<<15^o.charCodeAt(i)+d[i+1&7]<<13;for(;d.length<8;)d.push(0);for(i=0;i<8&&d[i]===0;++i);for(i==8&&(d[7]=-1),u.x=d,u.i=0,i=256;i>0;--i)u.next()}t(e,c)}function f(c,e){return e.x=c.x.slice(),e.i=c.i,e}function m(c,e){c==null&&(c=+new Date);var t=new l(c),u=e&&e.state,o=function(){return(t.next()>>>0)/4294967296};return o.double=function(){do var i=t.next()>>>11,d=(t.next()>>>0)/4294967296,h=(i+d)/(1<<21);while(h===0);return h},o.int32=t.next,o.quick=o,u&&(u.x&&f(u,t),o.state=function(){return f(t,{})}),o}n&&n.exports?n.exports=m:s&&s.amd?s(function(){return m}):this.xorshift7=m})(L,a,!1)})(ua);var la={exports:{}};(function(a){(function(r,n,s){function l(c){var e=this;e.next=function(){var u=e.w,o=e.X,i=e.i,d,h;return e.w=u=u+1640531527|0,h=o[i+34&127],d=o[i=i+1&127],h^=h<<13,d^=d<<17,h^=h>>>15,d^=d>>>12,h=o[i]=h^d,e.i=i,h+(u^u>>>16)|0};function t(u,o){var i,d,h,w,N,x=[],j=128;for(o===(o|0)?(d=o,o=null):(o=o+"\0",d=0,j=Math.max(j,o.length)),h=0,w=-32;w<j;++w)o&&(d^=o.charCodeAt((w+32)%o.length)),w===0&&(N=d),d^=d<<10,d^=d>>>15,d^=d<<4,d^=d>>>13,w>=0&&(N=N+1640531527|0,i=x[w&127]^=d+N,h=i==0?h+1:0);for(h>=128&&(x[(o&&o.length||0)&127]=-1),h=127,w=4*128;w>0;--w)d=x[h+34&127],i=x[h=h+1&127],d^=d<<13,i^=i<<17,d^=d>>>15,i^=i>>>12,x[h]=d^i;u.w=N,u.X=x,u.i=h}t(e,c)}function f(c,e){return e.i=c.i,e.w=c.w,e.X=c.X.slice(),e}function m(c,e){c==null&&(c=+new Date);var t=new l(c),u=e&&e.state,o=function(){return(t.next()>>>0)/4294967296};return o.double=function(){do var i=t.next()>>>11,d=(t.next()>>>0)/4294967296,h=(i+d)/(1<<21);while(h===0);return h},o.int32=t.next,o.quick=o,u&&(u.X&&f(u,t),o.state=function(){return f(t,{})}),o}n&&n.exports?n.exports=m:s&&s.amd?s(function(){return m}):this.xor4096=m})(L,a,!1)})(la);var ca={exports:{}};(function(a){(function(r,n,s){function l(c){var e=this,t="";e.next=function(){var o=e.b,i=e.c,d=e.d,h=e.a;return o=o<<25^o>>>7^i,i=i-d|0,d=d<<24^d>>>8^h,h=h-o|0,e.b=o=o<<20^o>>>12^i,e.c=i=i-d|0,e.d=d<<16^i>>>16^h,e.a=h-o|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,c===Math.floor(c)?(e.a=c/4294967296|0,e.b=c|0):t+=c;for(var u=0;u<t.length+20;u++)e.b^=t.charCodeAt(u)|0,e.next()}function f(c,e){return e.a=c.a,e.b=c.b,e.c=c.c,e.d=c.d,e}function m(c,e){var t=new l(c),u=e&&e.state,o=function(){return(t.next()>>>0)/4294967296};return o.double=function(){do var i=t.next()>>>11,d=(t.next()>>>0)/4294967296,h=(i+d)/(1<<21);while(h===0);return h},o.int32=t.next,o.quick=o,u&&(typeof u=="object"&&f(u,t),o.state=function(){return f(t,{})}),o}n&&n.exports?n.exports=m:s&&s.amd?s(function(){return m}):this.tychei=m})(L,a,!1)})(ca);var da={exports:{}};(function(a){(function(r,n,s){var l=256,f=6,m=52,c="random",e=s.pow(l,f),t=s.pow(2,m),u=t*2,o=l-1,i;function d(g,C,b){var S=[];C=C==!0?{entropy:!0}:C||{};var k=x(N(C.entropy?[g,J(n)]:g==null?j():g,3),S),A=new h(S),P=function(){for(var z=A.g(f),G=e,B=0;z<t;)z=(z+B)*l,G*=l,B=A.g(1);for(;z>=u;)z/=2,G/=2,B>>>=1;return(z+B)/G};return P.int32=function(){return A.g(4)|0},P.quick=function(){return A.g(4)/4294967296},P.double=P,x(J(A.S),n),(C.pass||b||function(z,G,B,R){return R&&(R.S&&w(R,A),z.state=function(){return w(A,{})}),B?(s[c]=z,G):z})(P,k,"global"in C?C.global:this==s,C.state)}function h(g){var C,b=g.length,S=this,k=0,A=S.i=S.j=0,P=S.S=[];for(b||(g=[b++]);k<l;)P[k]=k++;for(k=0;k<l;k++)P[k]=P[A=o&A+g[k%b]+(C=P[k])],P[A]=C;(S.g=function(z){for(var G,B=0,R=S.i,Y=S.j,E=S.S;z--;)G=E[R=o&R+1],B=B*l+E[o&(E[R]=E[Y=o&Y+G])+(E[Y]=G)];return S.i=R,S.j=Y,B})(l)}function w(g,C){return C.i=g.i,C.j=g.j,C.S=g.S.slice(),C}function N(g,C){var b=[],S=typeof g,k;if(C&&S=="object")for(k in g)try{b.push(N(g[k],C-1))}catch{}return b.length?b:S=="string"?g:g+"\0"}function x(g,C){for(var b=g+"",S,k=0;k<b.length;)C[o&k]=o&(S^=C[o&k]*19)+b.charCodeAt(k++);return J(C)}function j(){try{var g;return i&&(g=i.randomBytes)?g=g(l):(g=new Uint8Array(l),(r.crypto||r.msCrypto).getRandomValues(g)),J(g)}catch{var C=r.navigator,b=C&&C.plugins;return[+new Date,r,b,r.screen,J(n)]}}function J(g){return String.fromCharCode.apply(0,g)}if(x(s.random(),n),a.exports){a.exports=d;try{i=require("crypto")}catch{}}else s["seed"+c]=d})(typeof self!="undefined"?self:L,[],Math)})(da);var Sa=ta.exports,va=ia.exports,pa=sa.exports,ba=ua.exports,Ma=la.exports,wa=ca.exports,D=da.exports;D.alea=Sa;D.xor128=va;D.xorwow=pa;D.xorshift7=ba;D.xor4096=Ma;D.tychei=wa;var Aa=D,V,za=new Uint8Array(16);function Pa(){if(!V&&(V=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto!="undefined"&&typeof msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto),!V))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return V(za)}var xa=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function Ba(a){return typeof a=="string"&&xa.test(a)}var v=[];for(var U=0;U<256;++U)v.push((U+256).toString(16).substr(1));function Ka(a){var r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,n=(v[a[r+0]]+v[a[r+1]]+v[a[r+2]]+v[a[r+3]]+"-"+v[a[r+4]]+v[a[r+5]]+"-"+v[a[r+6]]+v[a[r+7]]+"-"+v[a[r+8]]+v[a[r+9]]+"-"+v[a[r+10]]+v[a[r+11]]+v[a[r+12]]+v[a[r+13]]+v[a[r+14]]+v[a[r+15]]).toLowerCase();if(!Ba(n))throw TypeError("Stringified UUID is invalid");return n}function Ga(a,r,n){a=a||{};var s=a.random||(a.rng||Pa)();if(s[6]=s[6]&15|64,s[8]=s[8]&63|128,r){n=n||0;for(var l=0;l<16;++l)r[n+l]=s[l];return r}return Ka(s)}let Na=Aa();function ma(){return Na()}function y(a,r){const n=Array.isArray(a)?()=>O(a):a;return r!=null&&r.length?Array.from({length:r.length},(s,l)=>n(l)):n(0)}function O(a){return a[Math.floor(ma()*a.length)]}function $({min:a=1,max:r=9999.99,fraction:n=0}={}){return Number((ma()*(r-a)+a).toFixed(n))}const Ra="0123456789",Z="abcdefghijklmnopqrstuvwxyz";`${Ra}${Z}${Z.split("").map(a=>a.toUpperCase()).join("")}`;function q(a){return y(Z.split(""),a)}function I(a){return y(()=>O([!0,!1]),a)}function T(a){const r={min:(a==null?void 0:a.min)||0,max:(a==null?void 0:a.max)||999999,precision:a==null?void 0:a.precision};return y(()=>{const n=$(r);return r.precision!==void 0?Math.floor(n/r.precision)*r.precision:n},a)}function Ha(a){var r;const n=(r=a==null?void 0:a.size)!=null?r:100;return y(()=>`https://i.pravatar.cc/${n}`,a)}var Ta=["South Dagmarshire","New Solonmouth","New Montemouth","Langborough","Padbergmouth","Connfurt","Metairie","New Merle","Willbury","North Sigmund","Opalbury","North Antonetta","Tallahassee","Janefurt","Port Adalberto","West Dorris","Kettering","Lake Adell","Bellingham","Buffalo","West Brendonville","South Laila","West Lucy","Marionton","Lake Brianne","New Ansley","Johnnieburgh","Jaskolskifort","New Davonteside","New Kyle","Williemouth","Lake Cesar","Bernierfurt","West Janetborough","Port Asa","East Filibertofurt","Fort Lauderdale","West Dellside","Glen Burnie","Port Amie","Shoreline","West Estaton","Cuyahoga Falls","North Kaleighshire","Kuvalismouth","South Darienbury","Venamouth","North Winnifred","Bahringertown","Haneborough","South Ahmedfort","East Khalilton","Aliso Viejo","Jaquelinview","Lake Ludie","West Simone","Katrinaside","North Nona","Tryciastad","Tabithaville","Frisco","Olympia","State College","New Garlandfort","Lake Anthony","West Everardo","Wehnerfort","South Verdieton","Lawrence","New Wallaceberg","White Plains","South Stacey","Farmington","Borerville","Erynside","Lake Zackton","Port Salvador","Funkville","North Frankie","East Vicentaborough","North Braulio","East Providence","Denesikburgh","New Philip","Durwardton","Kissimmee","North Celia","Maxwellport","Reichertland","Rettaland","West Amiya","Elisabethland","Rogers","Henderson","Franeckiview","Grand Rapids","Murray","Port Ricky","Port Hardymouth","Cruzshire"];function ha(a){return y(Ta,a)}var La=["Argentina","Peru","Colombia","Chile","Uruguay","Gabon","Congo","Norfolk Island","Qatar","Syrian Arab Republic","Wallis and Futuna","Somalia","Saint Barthelemy","Comoros","Sri Lanka","Czech Republic","Christmas Island","Macao","Montenegro","Anguilla","Canada","Mayotte","Tajikistan","Afghanistan","Liechtenstein","Cocos (Keeling) Islands","Angola","Bahrain","Dominican Republic","Croatia","Latvia","Virgin Islands, U.S.","United Kingdom","Brazil","Spain","Mongolia","Montserrat","Estonia","Benin","Guinea","Guinea-Bissau","Greece","Lao Peoples Democratic Republic","Puerto Rico","Slovakia (Slovak Republic)","United States of America","Switzerland","Costa Rica","Mauritius","Nigeria","Russian Federation","Germany","Antigua and Barbuda","Albania","Romania","Moldova","Senegal","Tanzania","British Indian Ocean Territory (Chagos Archipelago)","Central African Republic","New Caledonia","Burundi","Panama","Azerbaijan","Namibia","French Southern Territories","Vanuatu","Ethiopia","Burkina Faso","Tunisia","Mozambique","Belarus","Saint Kitts and Nevis","Hungary","Indonesia","Cyprus","Ecuador","Saint Martin","Nauru","Faroe Islands","Iran","Bolivia","Pitcairn Islands","France","Paraguay","Isle of Man","Sierra Leone","Monaco","Belize","Trinidad and Tobago"];function Da(a){return y(La,a)}var ja=["Bedfordshire","Berkshire","Bristol","Buckinghamshire","Cambridgeshire","Cheshire","City of London","Cornwall","Cumbria","Derbyshire","Devon","Dorset","Durham","East Riding of Yorkshire","East Sussex","Essex","Gloucestershire","Greater London","Greater Manchester","Hampshire","Herefordshire","Hertfordshire","Isle of Wight","Kent","Lancashire","Leicestershire","Lincolnshire","Merseyside","Norfolk","North Yorkshire","Northamptonshire","Northumberland","Nottinghamshire","Oxfordshire","Rutland","Shropshire","Somerset","South Yorkshire","Staffordshire","Suffolk","Surrey","Tyne and Wear","Warwickshire","West Midlands","West Sussex","West Yorkshire","Wiltshire","Worcestershire"];function Ja(a){return y(ja,a)}function Ea(a,r){return y(a,r)}var Fa=["org","biz","com","net","name","info","io","dev"];function fa(a){return y(Fa,a)}var Wa=["est","voluptatem","non","aut","aliquid","quaerat","quos","vel","tenetur","consectetur","ipsum","voluptate","numquam","cum","nulla","asperiores","in","laborum","quas","et","ullam","consequuntur","enim","dicta","quia","facilis","voluptatibus","at","hic","sunt","excepturi","maiores","vitae","fugit","possimus","unde","repellat","sit","necessitatibus","nemo","qui","exercitationem","dolores","esse","reiciendis","nihil","commodi","id","sequi","consequatur","occaecati","deserunt","quae","eos","sapiente","fugiat","neque","quasi","nostrum","magnam","sed","omnis","doloribus","error","ducimus","rerum","beatae","cupiditate","a","blanditiis","labore"];function Ia(a){return a.charAt(0).toUpperCase()+a.slice(1)}function W(a){return y(()=>{let n=O(Wa);return a!=null&&a.capitalize&&(n=Ia(n)),n},a)}var Ya=["aim","alice","aliceadsl","aol","arcor","att","bellsouth","bigpond","bluewin","blueyonder","bol","centurytel","charter","chello","club-internet","comcast","earthlink","facebook","free","freenet","frontiernet","gmail","gmx","googlemail","hetnet","home","hotmail","ig","juno","laposte","libero","live","mac","mail","me","msn","neuf","ntlworld","optonline","optusnet","orange","outlook","planet","qq","rambler","rediffmail","rocketmail","sbcglobal","sfr","shaw","sky","skynet","sympatico","t-online","telenet","terra","tin","tiscali","unaref","uol","verizon","virgilio","voila","wanadoo","web","windstream","yahoo","yandex","zonnet"];function ya(a){return y(Ya,a)}var aa={withAccents:["Adri\xE1n","\xC6del","\xC6gir","Agn\xE8s","Al\xEDcia","\xC1lvaro","Andr\xE9","Andr\xE9s","\xC4nne","Ant\xF3nia","\xC1rni","Asbj\xF8rn","\xC1sta","Au\xF0ur","Bj\xF6rn","C\xE4cilia","C\xE9sar","Chlo\xEB","Cla\xFAdia","Dan\xEDel","Dav\xED\xF0","D\xF6rte","El\xEDn","El\xEDsabet","Eli\u0161ka","Em\xEDlio","Fa\xF1ch","Fran\xE7ois","Franti\u0161ek","G\xEDsli","Gl\xF3ria","G\xF6tz","Gra\u017Cyna","Gu\xF0bj\xF6rg","Gu\xF0j\xF3n","Gu\xF0mundur","Gu\xF0n\xFD","Gu\xF0r\xFAn","G\xFCnter","Halld\xF3r","Hans-J\xF6rg","Hans-J\xFCrgen","Henri\xEBtte","H\xFCseyin","I\xF1aki","Ingibj\xF6rg","\xCDris","J\xE1nos","Jes\xFAs","Ji\u0159\xED","J\xF3hann","J\xF3hanna","J\xF3hannes","Jok\u016Bbas","J\xF3n","J\xF3na","Jos\xE9","J\xF6rn","J\xFAlia","Juli\xE3o","J\xFCrgen","K\xE4te","Katr\xEDn","Kolbr\xFAn","Krist\xEDn","Kristj\xE1n","K\u0160the","Let\xEDcia","L\xEDdia","L\xFAcia","Ma\xEBl","Magn\xFAs","Ma\u0142gorzata","Margr\xE9t","Mar\xEDa","Math\xE9o","M\xE1ty\xE1s","Micha\u0142","M\xF3nica","Nat\xE1lia","No\xEBl","Nu\xF1ez","\xD3lafur","\xD3l\xF6f","\xD3scar","\xD8yvind","P\xE1ll","Patr\xEDcia","Pawe\u0142","P\xE9tur","Ragnhei\xF0ur","Ram\xF3n","Ra\xFAl","Ren\xE9","Ren\xE9e","Ruair\xED","Rub\xE9n","Ru\u017Eena","Se\xE1n","S\xE9rgio","Si\xE2n","Sigr\xED\xF0ur","Sigr\xFAn","Sigur\xF0ur","S\xEDlvia","S\xF6nke","S\xF8rina","Stef\xE1n","Tom\xE1\u0161","V\u011Bra","Virg\xEDnia","Zo\xEB","\xDE\xF3ra","\xDEorsteinn","\xDE\xF3runn"],withoutAccents:["Abdul","Abdullahi","Abubakar","Adam","Adamu","Adiy","Agata","Agnieszka","Ahmad","Aisha","Ajay","Akira","Alan","Alberto","Alejandro","Aleksander","Aleksandr","Aleksandra","Aleksey","Alex","Alexander","Alexey","Ali","Alina","Aliyu","Alyona","Amina","Aminu","Amit","Amiyr","Amiyt","Amnuai","Amphon","Ana","Ana-Maria","Anah","Anan","Anastasiya","Andrea","Andreas","Andrew","Andrey","Andri","Andries","Andrzej","Angel","Anil","Anita","Ann","Anna","Anong","Anthony","Anton","Antonia","Antonio","Arnar","Artur","Artyom","Arun","Asha","Ashok","Atli","Avraham","Barbara","Bartosz","Beata","Bello","Berglind","Bernd","Bin","Birgir","Birgit","Birna","Bjarni","Blessing","Bongani","Brian","Brigitte","Bunmi","Busisiwe","Carlos","Carmen","Carol","Caroline","Catherine","Chan","Chanah","Chao","Charles","Charoen","Chayah","Chen","Cheng","Christa","Christian","Christine","Christopher","Claire","Claudia","Colin","Cristina","Daniel","Daniyel","Dariusz","Darya","David","Denis","Dennis","Diego","Dieter","Dilip","Dinesh","Dmitriy","Dmitry","Dolores","Dorota","Edda","Einar","Ekaterina","Elena","Elisabeth","Eliyahu","Elizabeth","Elke","Emiko","Emma","Emmanuel","Erika","Erla","Erna","Ester","Esther","Eunice","Eva","Evgeniy","Ewa","Faith","Fatima","Fiona","Fernando","Fran","Francis","Francisca","Francisco","Francisco-Javier","Frank","Franz","Fumiko","Galina","Gang","Garba","Gareth","Gary","George","Gerhard","Gisela","Gita","Grace","Graham","Grzegorz","Gunnar","Guy","Hadiza","Haim","Haiyan","Hanna","Hans","Hans-Ulrich","Haruna","Hassan","Hauwa","Heike","Heinz","Helen","Helga","Helgi","Helmut","Hendrik","Herbert","Hideo","Hildur","Hiroko","Hiromi","Hiroshi","Hisako","Hong","Horst","Hui","Hulda","Ian","Ibrahim","Idris","Igor","Ilya","Inga","Ingrid","Irina","Isa","Isaac","Isabel","Isah","Ivan","Iwona","Jabulani","Jacek","Jackline","Jacobus","Jakub","James","Jan","Jane","Janet","Janusz","Javier","Jean","Jennifer","Jerzy","Jesus","Jason","Jianguo","Jianhua","Jianjun","Jianping","Jin","Joan","Joanna","Johan","Johanna","Johannes","John","Jonathan","Jorge","Jose","Jose-Antonio","Jose-Luis","Jose-Manuel","Jose-Maria","Josef","Josefa","Joseph","Joy","Joyce","Juan","Julie","Justyna","Kabiru","Kai","Kamil","Kanchana","Karen","Karin","Karl","Karl-Heinz","Karolina","Kasia","Katarzyna","Katsumi","Kazuo","Keiko","Kelvin","Kenji","Kenneth","Kevin","Kiran","Kirill","Kiyoko","Kiyoshi","Kjartan","Klaus","Ko","Koichi","Koji","Konstantin","Koshi","Krishna","Kristina","Kristinn","Krzysztof","Kseniya","Kun","Lakshmi","Lalita","Lan","Latda","Laura","Laxmi","Leah","Lei","Li","Lihua","Lijun","Lilian","Lilja","Lin","Linda","Lindiwe","Ling","Liping","Lisa","Liyor","Lucia","Lucy","Luis","Lukasz","Lyubov","Lyudmila","Maciej","Magda","Magdalena","Mahmood","Maksim","Mali","Manfred","Manju","Manoj","Manuel","Marcin","Mardkhay","Marek","Margaret","Maria","Maria-Isabel","Maria-Jose","Maria-Pilar","Marina","Mariusz","Mariya","Mark","Marta","Martha","Martin","Mary","Maryam","Masako","Masami","Masao","Mateusz","Matt","Matthew","Mei","Meiyr","Mercy","Michael","Michal","Michiko","Mieko","Miguel","Miguel-Angel","Mikhail","Min","Mina","Ming","Miriam","Mitsuo","Miykhael","Miykhal","Miyoko","Mo","Mohamed","Mohammad","Mohammed","Mohan","Monika","Moses","Moshe","Mpho","Muhammad","Muhammed","Mukesh","Musa","Na","Nadezhda","Nan","Nancy","Narong","Natalya","Nathan","Ngozi","Nicola","Nikita","Nikolay","Ning","Nittaya","Nkosinathi","Noam","Nobuko","Nokuthula","Nonhlanhla","Noriko","Nushi","Oleg","Olga","Omer","Otieno","Pablo","Patricia","Patrick","Paul","Paula","Paulina","Pavel","Pawel","Pedro","Peng","Peter","Petra","Petrus","Philip","Phonthip","Pieter","Pilar","Ping","Piotr","Prani","Prasit","Prasoet","Pricha","Purity","Pushpa","Qiang","Qing","Rachel","Radha","Rafael","Ragnar","Raj","Rajendra","Rajesh","Raju","Rakesh","Ram","Ramesh","Raphael","Rattana","Ravi","Rebecca","Reiko","Rekha","Renate","Richard","Rita","Robert","Roman","Rong","Rosa","Rose","Roy","Rut","Ruth","Ryan","Ryoko","Sabine","Sachiko","Salisu","Saman","Samran","Samuel","Sani","Sanjay","Santosh","Sara","Sarah","Sam","Sammy","Sawat","Sebastian","Sergey","Sergio","Shankar","Shanti","Sharon","Shay","Shigeru","Shimon","Shizuko","Shlomo","Shoji","Shoshanah","Sibongile","Sibusiso","Simon","Sipho","Sita","Sombat","Sombun","Somchai","Somchit","Somkhit","Somkiat","Sommai","Somnuek","Somphon","Somphong","Somsak","Sri","Stefan","Steinunn","Stephen","Steve","Steven","Sukanya","Suman","Sunday","Sunil","Sunita","Sunthon","Suphaphon","Suresh","Susan","Susanne","Sushila","Suwit","Sveinn","Svetlana","Tadashi","Takako","Takashi","Takeshi","Tal","Tamar","Tatyana","Tebogo","Teruko","Thabo","Thawi","Themba","Thomas","Thulani","Tomasz","Tomiko","Toshiko","Toshio","Udom","Umar","Unnur","Urai","Uriy","Urmila","Ursula","Usha","Usman","Uwe","Valentina","Victor","Victoria","Vijay","Viktor","Viktoriya","Vincent","Vinod","Vladimir","Walter","Wanchai","Wanjiru","Wanphen","Waraphon","Watsana","Wei","Werner","Wichai","Wichian","Wilai","Willem","William","Winai","Wirat","Wirot","Wojciech","Wolfgang","Xiang","Xiaohong","Xiaoli","Xiaoping","Xiaoyan","Xin","Xolani","Yaakv","Yael","Yahaya","Yakubu","Yan","Yasuko","Yasuo","Yelena","Yhudah","Yhudiyt","Ying","Yisrael","Yoko","Yong","Yosef","Yoshie","Yoshiko","Yoshimi","Yoshio","Yu","Yue","Yukio","Yuko","Yuliya","Yun","Yuriy","Yusuf","Yuval","Zainab","Zandile","Zanele","Zbigniew","Zhen","Zhiqiang"]};function X(a){var r;const s=((r=a==null?void 0:a.withAccents)!=null?r:I())?aa.withAccents:aa.withoutAccents;return y(s,a)}var ea={withAccents:["\xC6bel\xF8","\xC6beltoft","\xC1g\xFAstsd\xF3ttir","\xC1g\xFAstsson","\xC1lvarez","\xC1rnad\xF3ttir","\xC1rnason","\xC1sgeirsd\xF3ttir","\xC3shaikh","Bene\u0161","Bene\u0161ov\xE1","Baldursd\xF3ttir","Birgisd\xF3ttir","Bjarnad\xF3ttir","Bj\xF6rnsd\xF3ttir","Bj\xF6rnsson","B\xF6ttcher","\u010Cern\xE1","\u010Cern\xFD","Ch\xE1vez","\xD0eki\u0107","D\xEDaz","\xD0or\xF0i\u0107","Dvo\u0159\xE1k","Dvo\u0159\xE1kov\xE1","Einarsd\xF3ttir","Fern\xE1ndez","Fialov\xE1","F\xF6rster","Fri\xF0riksson","Fr\xF6hlich","Garc\xEDa","G\xEDslad\xF3ttir","G\xEDslason","G\xF6bel","G\xF3mez","Gro\xDF","Gunnarsd\xF3ttir","Gu\xF0j\xF3nsd\xF3ttir","Gu\xF0j\xF3nsson","Gu\xF0mundsd\xF3ttir","Gu\xF0mundsson","G\xFCnther","Halld\xF3rsd\xF3ttir","Halld\xF3rsson","Guti\xE9rrez","Guzm\xE1n","H\xE1jek","Haraldsd\xF3ttir","Har\xF0ard\xF3ttir","Har\xF0arson","Helgad\xF3ttir","Hern\xE1ndez","Hauksd\xF3ttir","Hor\xE1k","Hor\xE1kov\xE1","Jab\u0142o\u0144ski","J\xE4ger","Jasi\u0144ski","Jim\xE9nez","J\xF3hannesd\xF3ttir","J\xF3hannesson","J\xF3hannsd\xF3ttir","J\xF3hannsson","J\xF3nasd\xF3ttir","J\xF3nasson","J\xF3nsd\xF3ttir","J\xF3nsson","Kami\u0144ski","Karlsd\xF3ttir","Kjartansd\xF3ttir","K\xF6hler","K\xF6nig","Koz\u0142owski","Kr\xE1lov\xE1","Krej\u010D\xED","Kristinsd\xF3ttir","Kristj\xE1nsd\xF3ttir","Kristj\xE1nsson","Kr\xFCger","Ku\u010Dera","Ku\u010Derov\xE1","\u0141api\u0144ski","L\xF6ffler","L\xF3pez","\u0141uczak","\u0141ukaszewski","Magn\xFAsd\xF3ttir","Magn\xFAsson","Markov\xE1","Mart\xEDnez","Mei\xDFner","M\xE9ndez","M\xF6ller","M\xFCller","Mu\xF1oz","Nov\xE1k","Nov\xE1kov\xE1","Novotn\xE1","Novotn\xFD","Nu\xF1ez","N\xFA\xF1ez","\xD8deg\xE5rd","\u0150hlschl\xE4gerov\xE1","\xD3lafsd\xF3ttir","\xD3lafsson","\u0150ll\xF6sov\xE1","Olszewski","\u0150ri","\u0150rs\xE9gi-Z\xF6lderd\u0151","\xD3skarsd\xF3ttir","\xD3skarsson","\xD8verg\xE5rd","\u0150zse","P\xE1lsd\xF3ttir","P\xE1lsson","Paw\u0142owski","Pe\xF1a","P\xE9rez","P\xE9tursd\xF3ttir","P\xE9tursson","Pokorn\xE1","Pokorn\xFD","Posp\xED\u0161il","Posp\xED\u0161ilov\xE1","Proch\xE1zka","Proch\xE1zkov\xE1","Ragnarsd\xF3ttir","Ram\xEDrez","R\xEDos","Rodr\xEDguez","S\xE1nchez","Sch\xE4fer","Schr\xF6der","Sch\xFCtz","Sigur\xF0ard\xF3ttir","Sigur\xF0sson","Sigurj\xF3nsd\xF3ttir","Sigurj\xF3nsson","Soko\u0142owski","Stef\xE1nsd\xF3ttir","Stef\xE1nsson","Sveinsd\xF3ttir","Svobodov\xE1","Szczepa\u0144ski","Szyma\u0144ski","Urba\u0144ski","\u016Asas","\u016A\u017Eien","V\xE1squez","Vesel\xE1","Vesel\xFD","Wei\xDF","\u017Bak","\u017D\xE1kov\xE1","Zemanov\xE1","Zieli\u0144ski","\u017Dukauskas","\u017Dukauskien\u0117","\xDE\xF3r\xF0ard\xF3ttir","\xDE\xF3r\xF0arson","\xDEorsteinsd\xF3ttir","\xDEorsteinsson"],withoutAccents:["Abdi","Abdullahi","Abe","Abubakar","Achieng","Adamczyk","Adamu","Adan","Adebayo","Adhiambo","Adri","Agbaria","Aguilar","Ahmad","Ahmed","Akinyi","Akpan","Ali","Aliev","Aliyu","Allen","Alonso","Alvarez","Amadi","Aminu","Andreev","Andreeva","Ansari","Anyango","Aoki","Arai","Arnarson","Ashknaziy","Atieno","Attias","Audu","Avraham","Ayutthaya","Azulay","Baba","Bai","Bailey","Baker","Bakker","Bala","Baldursson","Baloyi","Baran","Barasa","Barman","Bauer","Becker","Begam","Begum","Behera","Bekher","Bello","Bennett","Ber","Bevan","Bibi","Birgisson","Biswas","Bitton","Bjarnason","Blanco","Blom","Borkowski","Bos","Botha","Bowen","Braun","Brouwer","Brown","Bunma","Bunmi","Bunsi","Buthelezi","Cai","Cano","Cao","Carter","Castillo","Castro","Cele","Ceng","Chaichana","Chand","Chanthara","Chauke","Chebet","Chen","Cheng","Chepkemoi","Cherinsuk","Cheruiyot","Chided","Chmielewski","Chukwu","Clark","Clarke","Coetzee","Cohen","Collins","Cook","Cooper","Cortes","Cruz","Cui","Czarnecki","Dahan","Dai","Das","Dauda","David","Davies","Davis","Dayan","De-Bruijn","De-Graaf","De-Groot","De-Jong","Dekker","Delgado","Deng","Devi","Diaz","Dijkstra","Ding","Dlamini","Dominguez","Dong","Du-Plessis","Dube","Duda","Dudek","Dumont","Edwards","Egorov","Egorova","Einarsson","Elbaz","Eliyahu","Ellis","Emmanuel","Endo","Espinoza","Esteban","Evans","Eze","Fan","Fang","Feldman","Feng","Fernandez","Fiala","Fischer","Flores","Friedman","Frolova","Fu","Fuchs","Fujii","Fujita","Fukuda","Gaby","Gao","Garba","Garcia","Garrido","Garza","Ghosh","Gil","Golan","Goldstein","Gomez","Gonzales","Gonzalez","Goto","Govender","Grabowski","Green","Greenberg","Griffiths","Gu","Guerrero","Gumede","Gunnarsson","Guo","Gupta","Gutierrez","Hahn","Hall","Han","Haraldsson","Harle","Harle-Cowan","Harris","Harrison","Hartmann","Haruna","Hasegawa","Hashimoto","Hasna","Hassan","Hauksson","Hayashi","He","Helgason","Hen","Hendriks","Herbulot","Hernandez","Herrera","Herrmann","Hill","Hoekstra","Hoffmann","Hofmann","Hongthong","Hopkins","Howells","Hu","Huang","Huber","Hughes","Huisman","Hussein","Ibrahim","Idris","Iglesias","Igwe","Ikeda","Inoue","Isa","Isaac","Isah","Ishii","Ishikawa","Ito","Ivanov","Ivanova","Jabarin","Jackson","Jacobs","Jadhav","Jakubowski","James","Jankowski","Jansen","Janssen","Jaworski","Jenkins","Jia","Jiang","Jimenez","Jin","John","Johnson","Jones","Joseph","Juma","Jung","Kaczmarek","Kaiser","Kamau","Karanja","Kariuki","Karlsson","Kato","Katz","Kaur","Keller","Khan","Khatib","Khatoon","Khatun","Khoury","Khoza","Khumalo","Kibet","Kikuchi","Kim","Kimani","Kimura","King","Kjartansson","Klein","Kobayashi","Koch","Koech","Kok","Kondo","Kongkaeo","Koster","Kovalenko","Kowalczyk","Kowalski","Kozlov","Kozlova","Krause","Krawczyk","Kristinsson","Kubiak","Kucharski","Kuipers","Kumar","Kumari","Kuznetsov","Kuznetsova","Kwiatkowski","Lal","Lang","Langat","Lange","Lavyan","Lawal","Lebedeva","Lee","Lehmann","Levy","Lewandowski","Lewis","Li","Liang","Liao","Lim","Lin","Lis","Liu","Llewellyn","Lloyd","Lopez","Lozano","Lu","Luo","Ma","Maas","Mabaso","Macharia","Maciejewski","Maeda","Magomedov","Mahagna","Mahato","Mahlangu","Mahto","Maier","Maina","Majewski","Makarov","Makarova","Malinowski","Malkah","Maluleke","Mandal","Marciniak","Marek","Marin","Martin","Martinez","Masarweh","Maseko","Mathebula","Matsumoto","Matthews","Mayer","Mazibuko","Mazur","Mazurek","Mbatha","Medina","Meier","Meijer","Mendoza","Meng","Meyer","Mhamid","Mhlongo","Michalak","Michalski","Mikhaylov","Mikhaylova","Mishra","Mitchell","Mizrahi","Mkhize","Mofokeng","Mohamed","Mohammed","Mokoena","Molefe","Molina","Mondal","Moore","Mor","Morales","Moreno","Morgan","Mori","Morozov","Morozova","Morris","Moshe","Mthembu","Mthethwa","Mtshali","Muhammad","Muhammadu","Muhammed","Mulder","Murakami","Musa","Mustapha","Muthoni","Mutua","Mutuku","Mwangi","Naidoo","Nakajima","Nakamura","Nakano","Navarro","Nayak","Ndlovu","Nel","Neumann","Ngcobo","Ngobeni","Ngubane","Nguyen","Ngwenya","Nikitina","Nikolaev","Nikolaeva","Njeri","Njoroge","Njuguna","Nkosi","Novikov","Novikova","Nowak","Nowakowski","Nowicki","Ntuli","Nxumalo","Nyambura","Oakley","Ochieng","Odhiambo","Ogawa","Ohana","Ohayon","Ojo","Okada","Okafor","Okeke","Okon","Okoro","Okoth","Omar","Omer","Omondi","Ono","Onyango","Ortega","Ortiz","Ostrowski","Ota","Otieno","Ouma","Owen","Owino","Pal","Pan","Panya","Paramar","Parker","Parry","Paswan","Patel","Patil","Pavlov","Pavlova","Pawlak","Peeters","Peng","Peretz","Perez","Peter","Peters","Petrov","Petrova","Pfeiffer","Phillips","Photsi","Pietrzak","Pillay","Piotrowski","Popov","Popova","Powell","Prasad","Pretorius","Price","Prieto","Prins","Pritchard","Pugh","Qiu","Rabiu","Radebe","Ragnarsson","Ram","Ramirez","Ramos","Rani","Rathod","Ray","Rees","Ren","Reuben","Reyes","Richards","Richardson","Richter","Rivera","Roberts","Robinson","Rodriguez","Rogers","Romanov","Romanova","Romero","Rosenberg","Rotich","Rowlands","Roy","Rubio","Ruiz","Rungrueang","Rumbelow","Rutkowski","Sadowski","Saeli","Saelim","Saengthong","Saetan","Saetang","Saeueng","Sah","Saha","Sahu","Saidu","Saito","Sakai","Sakamoto","Salazar","Salisu","Samuel","Sanchez","Sangthong","Sani","Santiago","Santos","Sanz","Sarkar","Sasaki","Sato","Sawicki","Schmid","Schmidt","Schmitt","Schmitz","Schneider","Scholz","Schouten","Schulz","Schulze","Schwartz","Schwarz","Scott","Segel","Sekh","Sergeeva","Serrano","Shaikh","Shalom","Shapiro","Sharabi","Sharma","Shaw","Shehu","Shemesh","Shevchenko","Shi","Shimizu","Sibiya","Sichantha","Sikora","Simiyu","Singh","Sisuk","Sithole","Sitwat","Smee","Smirnov","Smirnova","Smit","Smith","Smits","Sokolov","Sokolova","Sombun","Song","Soto","Smoakley","Starr","Stepanov","Stepanova","Su","Suad","Suarez","Suissa","Sukkasem","Sulaiman","Suleiman","Sun","Sunday","Suwan","Suzuki","Sveinsson","Svoboda","Szewczyk","Takahashi","Takeuchi","Tal","Tan","Tanaka","Tang","Taylor","Thakur","Thomas","Thompson","Thongdi","Thongkham","Thongsuk","Tian","Tomaszewski","Torres","Tshabalala","Turner","Udo","Ueda","Umar","Umaru","Usman","Vaknin","Valdez","Van-Beek","Van-Dam","Van-den-Berg","Van-der-Heijden","Van-der-Linden","Van-Dijk","Vargas","Vasilev","Vasileva","Vazquez","Vega","Venter","Verhoeven","Vermeulen","Visser","Volkov","Volkova","Vos","Wafula","Wagner","Wairimu","Walczak","Walker","Walter","Walters","Wambua","Wambui","Wang","Wangui","Wanjala","Wanjiku","Ward","Watanabe","Watkins","Watson","Weber","Wei","Wekesa","Wen","Werner","White","Wieczorek","Wilk","Willems","Williams","Wilson","Witkowski","Wojciechowski","Wolf","Wood","Wright","Wu","Xiao","Xie","Xu","Yaakv","Yadav","Yahaya","Yakovleva","Yakubu","Yamada","Yamaguchi","Yamamoto","Yamashita","Yamazaki","Yan","Yang","Yao","Ye","Yin","Yosef","Yoshida","Young","Yu","Yuan","Yusuf","Zaj\u0105c","Zakharov","Zakharova","Zalewski","Zawadzki","Zaytseva","Zhang","Zhao","Zheng","Zhong","Zhou","Zhu","Zimmermann","Zoabi","Zulu","Zwane"]};function Q(a){var r;const s=((r=a==null?void 0:a.withAccents)!=null?r:I())?ea.withAccents:ea.withoutAccents;return y(s,a)}function Va(a){var r,n;let s="";const l=(r=a==null?void 0:a.firstName)!=null?r:X({withAccents:!1}),f=(n=a==null?void 0:a.lastName)!=null?n:Q({withAccents:!1});a!=null&&a.nameSeparator?a.nameSeparator!=="none"&&(s=a.nameSeparator):s=y([".","-","_","+",""]);let m=`${l} ${f}`.replace(" ",s);return I()&&(m+=T({min:1,max:1e3})),m.toLowerCase()}function Oa(a){return y(()=>{const n=(a==null?void 0:a.provider)||ya(),s=Va(a),l=(a==null?void 0:a.suffix)||fa();return`${s}@${n}.${l}`},a)}function ga(a){var r;const n=Object.assign({},a,{fraction:(r=a==null?void 0:a.fraction)!=null?r:2});return y(()=>$(n),a)}ga();var $a={china:["Peking roasted duck","Kung pao chicken","Sweet and sour pork","Hot pot","Dim sum","Dumplings","Ma po tofu","Char siu","Chicken chow mein","Beef chow mein","vegetable chow mein","Chicken fried rice","Beef fried rice","Vegetable fried Rice","Special fried Rice","Sichuan pork","Xiaolongbao","Zhajiangmian","Wonton soup","Sweet and sour pork","Duck spring Rolls","Vegetable spring Rolls","Wonton","Peking duck","Lamb hot pot","Spicy crayfish","Guilin rice noodles","Lanzhou hand-pulled noodles","Steamed crab","Shredded pork with garlic sauce","Red braised pork","Sweet and sour Ribs","Xinjiang","Braised pork with vermicelli"],italy:["Butternut squash risotto","Mushroom risotto","Beetroot risotto","Courgette risotto","Pizza","Gnocchi","Spaghetti bolognese","Spaghetti carbonara","Pesto alla Genovese","Beef lasagne","Vegetable lasagne","Gelato","Prosciutto di Parma","Ribollita","Bagna cauda","Polenta","Tortelli and ravioli","Focaccia","Garlic bread","Arancini","Il tartufo","Panzerotto fritto","Fiorentina","Minestrone","Frico","Arrosticini","Olive ascolante","Fritto misto piemontes","Tiramis\xF9"],india:["Biryani","Dosa","Tandoori chicken","Samosas","Chaat","Plain naan","Garlic naan","Pilau rice","Steamed rice","Chicken madras","Vegetable madras","Chicken vindaloo","Chicken jalfrezi","Chicken roghan josh","Lamb roghan josh","Beef roghan josh","Butter chicken","Dosa","Gulab jamun","Chicken korma","Mutter paneer","Papadum","Paratha","Raita","Saag paneer","Tandoori chicken","Chicken tikka masala","Pakora","Dal","Chapati","Pasanda","Aloo gobi","Kofta","Chicken makhani","Paneer naan","Chana Aloo Curry"],mexico:["Chilaquiles","Pozole","Tacos al pastor","Tostadas","Chiles en nogada","Elote","Enchiladas","Mole","Guacamole","Tamales","Huevos rancheros","Machaca","Discada","Beef Burrito","Chicken Burrito","Pozole de pollo o duajolote","Menudo","Cochinita pibil","Tamale","Quesadilla","Frijoles puercos","Chile en nogada","Esquites","Alegria de amaranto","Pipi\xE1n","Aguachile","Ceviche","Pescado zarandeado","Camarones a la diabla","Birria de chivo","Tlayuda","Guacamole con chapulines","Flautas","Torta Ahogada","Carnitas","Caldo Azteca","Gorditas de Nata"],japan:["Sushi","Udon","Tofu","Tempura","Yakitori","Sashimi","Ramen","Donburi","Natto","Oden","Tamagoyaki","Soba","Tonkatsu","Kashipan","Sukiyaki","Miso soup","Okonomiyaki","Mentaiko","Nikujaga","Unagi no kabayaki","Shabu Shabu","Onigiri","Gyoza","Takoyaki","aiseki ryori","Edamame","Yakisoba","Chawanmushi","Wagashi"],france:["Foie gras","Hu\xEEtres","Cassoulet","Poulet basquaise","Escargots au beurre persill\xE9","Mouclade charentaise","Galettes bretonnes","Flemish carbonnade","Quiche lorraine","Raclette","Cheese fondue","Beef fondue","Gratin dauphinois","Tartiflette","Bouillabaisse","Ratatouille","Boeuf bourguignon","Blanquette de veau","Pot-au-feu","Coq-au-vin","Hachis parmentier","Steak tartare","Choucroute","Souffl\xE9 au fromage","Cuisses de grenouilles","Soupe \xE0 l\u2019oignon","Baguette","Croissant","French cheeses","Fondant au chocolat","Tarte tatin","Macarons","Cr\xE8me br\xFBl\xE9e","\xCEle flottante","Profiteroles","Pain au chocolat"],lebanon:["Kibbeh","Kafta","Kanafeh","Hummus","Rice pilaf","Fattoush","Manakish","Tabbouleh","Sfeeha","Fattoush","Labneh","Muhammara","Lahm bi ajin","Kaak","Chanklich","Mssabaha","Shawarma","Kebbe","Falafel","Halewit el jeben","Namoura","Maamoul","Foul mdammas","Balila","Kawarma","Fattouch"],thailand:["Pad kra pao moo","Tom kha gai","Khao Pad","Chicken pad Thai","Vegetable pad Thai","Moo satay","Tom yum goong","Khao niew mamuang","Kai yad sai","Khao soi","Pad see ew","Laab moo","Gaeng panang","Gai pad med ma muang","Som tam","Poh pia tod","Gaeng massaman","Pla kapung nueng manao","Tod mun pla","Gaeng ped","Gaeng garee","Gaeng keow wan","Moo ping","Durian","Sai ooah","Hoy tod","Kuay teow reua","Mu kratha","Kao ka moo","Yam nua"],greece:["Moussaka","Papoutsakia","Pastitsio","Souvlaki","Soutzoukakia","Stifado","Tomatokeftedes","Tzatziki","Kolokithokeftedes","Giouvetsi","Choriatiki","Kleftiko","Gemista","Fasolada","Bougatsa","Tiropita","Spanakopita","Feta Cheese with Honey","Horta","Tirokroketes","Briam","Saganaki","Gigantes","Dolmades","Fasolatha","Koulouri","Loukoumades","Gyros","Galaktoboureko","Baklava"],turkey:["\u015Ei\u015F kebap","D\xF6ner","K\xF6fte","Pide","Kumpir","Meze","Mant\u0131","Lahmacun","Menemen","\u015Ei\u015F kebap","\u0130skender kebab","Corba","Kuzu tandir","\xC7i\u011F K\xF6fte","Pilav","Yaprak sarma","Dolma","\u0130mam bay\u0131ld\u0131","Borek","Durum","Kumpir","Balik ekmek","Simit","Kunefe","Baklava","Lokum","Halva","Mozzaik pasta","G\xFClla\xE7","Mercimek K\xF6ftesi","Haydari","Tursu suyu","Kahvalti","Kazan dibi","Hunkar begendi","Islak burgers","Salep","Yogurtlu kebab"],spain:["Tortilla de patatas","Fabada asturiana","Cal\xE7ots","Boquerones al vinagre","Empanada gallega","Paella","Gazpacho","Gachas","Migas","Bocadillo de calamares","Pulpo a feira","Caldo gallego","Lentejas con chorizo","Cocido madrile\xF1o","Cachopo","Caracoles"],venezuela:["Pabell\xF3n criollo","Arepa","Mondongo","Empanadas","Quesillo","Chicha andina","Teque\xF1os","Cachapa","Hallaca","Perico","Pasticho","Mandocas","Caraotas negras","Patacones","Dulce de leche","Pan de Jam\xF3n"],chile:["Humitas","Empanadas","Porotos con riendas","Completos","Manjar","Cordero al palo","Pastel de choclo","Mote con huesillos","Sopaipillas","Curanto"],argentina:["Milanesas","Empanadas","Pizza fugazeta","Asado","Choripan","Bondiola","Bife de chorizo"],colombia:["Bandeja paisa","Chuleta valluna","Sancocho trif\xE1sico","Empanada valluna","Salpicon de frutas","Pastel de garbanzo","Ajiaco","Arepas","Arroz de lisa","Sancocho","Pan de bono","Cuchuco","Oblea","Cazuela de mariscos","Pan de yuca","Bollo Limpio","Almoj\xE1bana","Empanadas","Arroz con Coco","Sopa de mondongo","Cazuela de Mariscos","Arroz con Pollo","Arepa de Huevo","Mote de Queso"],ecuador:["Encebollado","Ceviche","Tigrillo","Bolon de verde","Llapingacho","Mote pillo","Locro de papa","Churrasco"],peru:["Ceviche","Arroz con pollo","Aji de gallina","Llunca de gallina"],romania:["Sarmale","Mici","Pomana porcului","Ciorb\u0103 de fasole cu ciolan","Ciorb\u0103 de burt\u0103","Ciorb\u0103 r\u0103d\u0103u\u021Bean\u0103","Pl\u0103cint\u0103 cu br\xE2nz\u0103","Ciorb\u0103 de potroace","M\u0103m\u0103lig\u0103 cu br\xE2nz\u0103 \u0219i sm\xE2nt\xE2n\u0103","Tochitur\u0103","Piftie","Iahnie de fasole","Sl\u0103nin\u0103 afumat\u0103","C\xE2rna\u021Bi afuma\u021Bi","Varz\u0103 a la Cluj","Gula\u0219 de cartofi cu afum\u0103tur\u0103","Cozonac de cas\u0103","Ciorb\u0103 ardeleneasc\u0103 de porc","Mucenici moldovene\u0219ti","Salat\u0103 de boeuf","Dovleac copt","Papana\u0219i cu br\xE2nz\u0103 de vac\u0103 \u0219i afine","Drob de miel","P\xE2rjoale moldovene\u0219ti","Zacusc\u0103 de vinete","Zacusc\u0103 de fasole","Turt\u0103 dulce","Cl\u0103titele cu gem","Cl\u0103titele cu br\xE2nza de vac\u0103","Balmo\u0219","Cozonac","Chiftele"]},ra;(ra=Object.keys($a))==null||ra.length;function Ua(a){const r={withAccents:a==null?void 0:a.withAccents};return y(()=>`${X(r)} ${Q(r)}`,a)}const Za={min:0,max:255};function qa(a){return y(()=>Array.from({length:4},()=>T(Za)).join("."),a)}const Ca=50;function _a(a){const r=$({min:1,max:10,fraction:0});return r===1||a===Ca?".":r===2?",":""}function _(a){return y(()=>{let n=W({capitalize:!0}),s=1;for(;s<Ca;){const l=W();let f="";if(s++,s>3&&(f=_a(s)),n+=` ${l}${f}`,f===".")break}return n},a)}function Xa(a){return y(()=>{var r,n,s;const[l,f,m]=[(r=a==null?void 0:a.mask)!=null?r:"@##@#",(n=a==null?void 0:a.char)!=null?n:"@",(s=a==null?void 0:a.digit)!=null?s:"#"];return l.split("").map(c=>c===f?q():c===m?$({min:0,max:9,fraction:0}):c).join("")},a)}var na=[{formats:["+247 ####"],countryCode:["AC"]},{formats:["+376 ### ###"],countryCode:["AD"]},{formats:["+971 ## ### ####","+971 # ### ####"],countryCode:["AE"]},{formats:["+93 ## ### ####"],countryCode:["AF"]},{formats:["+1(268)### ####"],countryCode:["AG"]},{formats:["+1(264)### ####"],countryCode:["AI"]},{formats:["+355(###)### ###"],countryCode:["AL"]},{formats:["+374 ## ### ###"],countryCode:["AM"]},{formats:["+599 ### ####","+599 9### ####"],countryCode:["AN"]},{formats:["+244(###)### ###"],countryCode:["AO"]},{formats:["+672 1## ###"],countryCode:["AQ"]},{formats:["+54(###)### ####"],countryCode:["AR"]},{formats:["+1(684)### ####"],countryCode:["AS"]},{formats:["+43(###)### ####"],countryCode:["AT"]},{formats:["+61 # #### ####"],countryCode:["AU"]},{formats:["+297 ### ####"],countryCode:["AW"]},{formats:["+994 ## ### ## ##"],countryCode:["AZ"]},{formats:["+387 ## #####","+387 ## ####"],countryCode:["BA"]},{formats:["+1(246)### ####"],countryCode:["BB"]},{formats:["+880 ## ### ###"],countryCode:["BD"]},{formats:["+32(###)### ###"],countryCode:["BE"]},{formats:["+226 ## ## ####"],countryCode:["BF"]},{formats:["+359(###)### ###"],countryCode:["BG"]},{formats:["+973 #### ####"],countryCode:["BH"]},{formats:["+257 ## ## ####"],countryCode:["BI"]},{formats:["+229 ## ## ####"],countryCode:["BJ"]},{formats:["+1(441)### ####"],countryCode:["BM"]},{formats:["+673 ### ####"],countryCode:["BN"]},{formats:["+591 # ### ####"],countryCode:["BO"]},{formats:["+55 ## #### ####, +55 ## ##### ####"],countryCode:["BR"]},{formats:["+1(242)### ####"],countryCode:["BS"]},{formats:["+975 17 ### ###, +975 # ### ###"],countryCode:["BT"]},{formats:["+267 ## ### ###"],countryCode:["BW"]},{formats:["+375(##)### ## ##"],countryCode:["BY"]},{formats:["+501 ### ####"],countryCode:["BZ"]},{formats:["+243(###)### ###"],countryCode:["CD"]},{formats:["+236 ## ## ####"],countryCode:["CF"]},{formats:["+242 ## ### ####"],countryCode:["CG"]},{formats:["+41 ## ### ####"],countryCode:["CH"]},{formats:["+225 ## ### ###"],countryCode:["CI"]},{formats:["+682 ## ###"],countryCode:["CK"]},{formats:["+56 # #### ####"],countryCode:["CL"]},{formats:["+237 #### ####"],countryCode:["CM"]},{formats:["+86(###)#### ####","+86(###)#### ###","+86 ## ##### #####"],countryCode:["CN"]},{formats:["+57(###)### ####"],countryCode:["CO"]},{formats:["+506 #### ####"],countryCode:["CR"]},{formats:["+53 # ### ####"],countryCode:["CU"]},{formats:["+238(###)## ##"],countryCode:["CV"]},{formats:["+599 ### ####"],countryCode:["CW"]},{formats:["+357 ## ### ###"],countryCode:["CY"]},{formats:["+420(###)### ###"],countryCode:["CZ"]},{formats:["+49(####)### ####, +49(###)### ####","+49(###)## ####","+49(###)## ###","+49(###)## ##","+49 ### ###"],countryCode:["DE"]},{formats:["+253 ## ## ## ##"],countryCode:["DJ"]},{formats:["+45 ## ## ## ##"],countryCode:["DK"]},{formats:["+1(767)### ####"],countryCode:["DM"]},{formats:["+1(809)### ####","+1(829)### ####","+1(849)### ####"],countryCode:["DO"]},{formats:["+213 ## ### ####"],countryCode:["DZ"]},{formats:["+593 ## ### ####","+593 # ### ####"],countryCode:["EC"]},{formats:["+372 #### ####","+372 ### ####"],countryCode:["EE"]},{formats:["+20(###)### ####"],countryCode:["EG"]},{formats:["+291 # ### ###"],countryCode:["ER"]},{formats:["+34(###)### ###"],countryCode:["ES"]},{formats:["+251 ## ### ####"],countryCode:["ET"]},{formats:["+358(###)### ## ##"],countryCode:["FI"]},{formats:["+679 ## #####"],countryCode:["FJ"]},{formats:["+500 #####"],countryCode:["FK"]},{formats:["+691 ### ####"],countryCode:["FM"]},{formats:["+298 ### ###"],countryCode:["FO"]},{formats:["+262 ##### ####","+33 1 ## ## ## ##","+33 2 ## ## ## ##","+33 3 ## ## ## ##","+33 4 ## ## ## ##","+33 5 ## ## ## ##","+33 6 ## ## ## ##","+33 7 ## ## ## ##","+508 ## ####","+590(###)### ###"],countryCode:["FR"]},{formats:["+241 # ## ## ##"],countryCode:["GA"]},{formats:["+1(473)### ####"],countryCode:["GD"]},{formats:["+995(###)### ###"],countryCode:["GE"]},{formats:["+594 ##### ####"],countryCode:["GF"]},{formats:["+233(###)### ###"],countryCode:["GH"]},{formats:["+350 ### #####"],countryCode:["GI"]},{formats:["+299 ## ## ##"],countryCode:["GL"]},{formats:["+220(###)## ##"],countryCode:["GM"]},{formats:["+224 ## ### ###"],countryCode:["GN"]},{formats:["+240 ## ### ####"],countryCode:["GQ"]},{formats:["+30(###)### ####"],countryCode:["GR"]},{formats:["+502 # ### ####"],countryCode:["GT"]},{formats:["+1(671)### ####"],countryCode:["GU"]},{formats:["+245 # ######"],countryCode:["GW"]},{formats:["+592 ### ####"],countryCode:["GY"]},{formats:["+852 #### ####"],countryCode:["HK"]},{formats:["+504 #### ####"],countryCode:["HN"]},{formats:["+385 (##) ### ###","+385 (##) ### ####","+385 1 #### ###"],countryCode:["HR"]},{formats:["+509 ## ## ####"],countryCode:["HT"]},{formats:["+36(###)### ###"],countryCode:["HU"]},{formats:["+62(8##)### ####","+62(8##)### ###","+62(8##)### ## ###","+62 ## ### ##","+62 ## ### ###","+62 ## ### ####"],countryCode:["ID"]},{formats:["+353(###)### ###"],countryCode:["IE"]},{formats:["+972 5# ### ####","+972 # ### ####"],countryCode:["IL"]},{formats:["+91 ##### #####"],countryCode:["IN"]},{formats:["+246 ### ####"],countryCode:["IO"]},{formats:["+964(###)### ####"],countryCode:["IQ"]},{formats:["+98(###)### ####"],countryCode:["IR"]},{formats:["+354 ### ####"],countryCode:["IS"]},{formats:["+39(0##)#### ## ##","+39(0##)#### ###","+39(0##)### ###","+39(0##)## ###","+39(0##)## ##","+39(0#)## ##","+39(3##)### ## ##","+39(3##)## ## ##"],countryCode:["IT"]},{formats:["+1(876)### ####"],countryCode:["JM"]},{formats:["+962 # #### ####"],countryCode:["JO"]},{formats:["+81 ## #### ####","+81(###)### ###"],countryCode:["JP"]},{formats:["+254 ### ######"],countryCode:["KE"]},{formats:["+996(###)### ###"],countryCode:["KG"]},{formats:["+855 ## ### ###"],countryCode:["KH"]},{formats:["+686 ## ###"],countryCode:["KI"]},{formats:["+269 ## #####"],countryCode:["KM"]},{formats:["+1(869)### ####"],countryCode:["KN"]},{formats:["+850 191 ### ####","+850 ## ### ###","+850 ### #### ###","+850 ### ###","+850 #### ####","+850 #### #############"],countryCode:["KP"]},{formats:["+82 ## ### ####"],countryCode:["KR"]},{formats:["+965 #### ####"],countryCode:["KW"]},{formats:["+1(345)### ####"],countryCode:["KY"]},{formats:["+7(6##)### ## ##","+7(7##)### ## ##"],countryCode:["KZ"]},{formats:["+856(20##)### ###","+856 ## ### ###"],countryCode:["LA"]},{formats:["+961 ## ### ###","+961 # ### ###"],countryCode:["LB"]},{formats:["+1(758)### ####"],countryCode:["LC"]},{formats:["+423(###)### ####"],countryCode:["LI"]},{formats:["+94 ## ### ####"],countryCode:["LK"]},{formats:["+231 ## ### ###"],countryCode:["LR"]},{formats:["+266 # ### ####"],countryCode:["LS"]},{formats:["+370(###)## ###"],countryCode:["LT"]},{formats:["+352 ### ###","+352 #### ###","+352 ##### ###","+352 ###### ###"],countryCode:["LU"]},{formats:["+371 ## ### ###"],countryCode:["LV"]},{formats:["+218 ## ### ###","+218 21 ### ####"],countryCode:["LY"]},{formats:["+212 ## #### ###"],countryCode:["MA"]},{formats:["+377(###)### ###","+377 ## ### ###"],countryCode:["MC"]},{formats:["+373 #### ####"],countryCode:["MD"]},{formats:["+382 ## ### ###"],countryCode:["ME"]},{formats:["+261 ## ## #####"],countryCode:["MG"]},{formats:["+692 ### ####"],countryCode:["MH"]},{formats:["+389 ## ### ###"],countryCode:["MK"]},{formats:["+223 ## ## ####"],countryCode:["ML"]},{formats:["+95 ## ### ###","+95 # ### ###","+95 ### ###"],countryCode:["MM"]},{formats:["+976 ## ## ####"],countryCode:["MN"]},{formats:["+853 #### ####"],countryCode:["MO"]},{formats:["+1(670)### ####"],countryCode:["MP"]},{formats:["+596(###)## ## ##"],countryCode:["MQ"]},{formats:["+222 ## ## ####"],countryCode:["MR"]},{formats:["+1(664)### ####"],countryCode:["MS"]},{formats:["+356 #### ####"],countryCode:["MT"]},{formats:["+230 ### ####"],countryCode:["MU"]},{formats:["+960 ### ####"],countryCode:["MV"]},{formats:["+265 1 ### ###","+265 # #### ####"],countryCode:["MW"]},{formats:["+52(###)### ####","+52 ## ## ####"],countryCode:["MX"]},{formats:["+60 ## ### ####","+60 11 #### ####","+60(###)### ###","+60 ## ### ###","+60 # ### ###"],countryCode:["MY"]},{formats:["+258 ## ### ###"],countryCode:["MZ"]},{formats:["+264 ## ### ####"],countryCode:["NA"]},{formats:["+687 ## ####"],countryCode:["NC"]},{formats:["+227 ## ## ####"],countryCode:["NE"]},{formats:["+672 3## ###"],countryCode:["NF"]},{formats:["+234(###)### ####","+234 ## ### ###","+234 ## ### ##","+234(###)### ####"],countryCode:["NG"]},{formats:["+505 #### ####"],countryCode:["NI"]},{formats:["+31 ## ### ####"],countryCode:["NL"]},{formats:["+47(###)## ###"],countryCode:["NO"]},{formats:["+977 ## ### ###"],countryCode:["NP"]},{formats:["+674 ### ####"],countryCode:["NR"]},{formats:["+683 ####"],countryCode:["NU"]},{formats:["+64(###)### ###[#]","+64 ## ### ###"],countryCode:["NZ"]},{formats:["+968 ## ### ###"],countryCode:["OM"]},{formats:["+507 ### ####"],countryCode:["PA"]},{formats:["+51(###)### ###"],countryCode:["PE"]},{formats:["+689 ## ## ##"],countryCode:["PF"]},{formats:["+675(###)## ###"],countryCode:["PG"]},{formats:["+63(###)### ####"],countryCode:["PH"]},{formats:["+92(###)### ####"],countryCode:["PK"]},{formats:["+48(###)### ###"],countryCode:["PL"]},{formats:["+970 ## ### ####"],countryCode:["PS"]},{formats:["+351 ## ### ####"],countryCode:["PT"]},{formats:["+680 ### ####"],countryCode:["PW"]},{formats:["+595(###)### ###"],countryCode:["PY"]},{formats:["+974 #### ####"],countryCode:["QA"]},{formats:["+262 ##### ####"],countryCode:["RE"]},{formats:["+40 ## ### ####"],countryCode:["RO"]},{formats:["+381 ## ### ####"],countryCode:["RS"]},{formats:["+7(###)### ## ##"],countryCode:["RU"]},{formats:["+250(###)### ###"],countryCode:["RW"]},{formats:["+966 5 #### ####","+966 # ### ####"],countryCode:["SA"]},{formats:["+677 ### ####","+677 #####"],countryCode:["SB"]},{formats:["+248 # ### ###"],countryCode:["SC"]},{formats:["+249 ## ### ####"],countryCode:["SD"]},{formats:["+46 ## ### ####"],countryCode:["SE"]},{formats:["+65 #### ####"],countryCode:["SG"]},{formats:["+290 ####","+290 ####"],countryCode:["SH"]},{formats:["+386 ## ### ###"],countryCode:["SI"]},{formats:["+421(###)### ###"],countryCode:["SK"]},{formats:["+232 ## ######"],countryCode:["SL"]},{formats:["+378 #### ######"],countryCode:["SM"]},{formats:["+221 ## ### ####"],countryCode:["SN"]},{formats:["+252 ## ### ###","+252 # ### ###","+252 # ### ###"],countryCode:["SO"]},{formats:["+597 ### ####","+597 ### ###"],countryCode:["SR"]},{formats:["+211 ## ### ####"],countryCode:["SS"]},{formats:["+239 ## #####"],countryCode:["ST"]},{formats:["+503 ## ## ####"],countryCode:["SV"]},{formats:["+1(721)### ####"],countryCode:["SX"]},{formats:["+963 ## #### ###"],countryCode:["SY"]},{formats:["+268 ## ## ####"],countryCode:["SZ"]},{formats:["+1(649)### ####"],countryCode:["TC"]},{formats:["+235 ## ## ## ##"],countryCode:["TD"]},{formats:["+228 ## ### ###"],countryCode:["TG"]},{formats:["+66 ## ### ####","+66 ## ### ###"],countryCode:["TH"]},{formats:["+992 ## ### ####"],countryCode:["TJ"]},{formats:["+690 ####"],countryCode:["TK"]},{formats:["+670 ### ####","+670 77# #####","+670 78# #####"],countryCode:["TL"]},{formats:["+993 # ### ####"],countryCode:["TM"]},{formats:["+216 ## ### ###"],countryCode:["TN"]},{formats:["+676 #####"],countryCode:["TO"]},{formats:["+90(###)### ####"],countryCode:["TR"]},{formats:["+1(868)### ####"],countryCode:["TT"]},{formats:["+688 90####","+688 2####"],countryCode:["TV"]},{formats:["+886 # #### ####","+886 #### ####"],countryCode:["TW"]},{formats:["+255 ## ### ####"],countryCode:["TZ"]},{formats:["+380(##)### ## ##"],countryCode:["UA"]},{formats:["+256(###)### ###"],countryCode:["UG"]},{formats:["+44 #### ######"],countryCode:["GB","UK"]},{formats:["+598 # ### ## ##"],countryCode:["UY"]},{formats:["+998 ## ### ####"],countryCode:["UZ"]},{formats:["+39 6 698 #####"],countryCode:["VA"]},{formats:["+1(784)### ####"],countryCode:["VC"]},{formats:["+58(###)### ####"],countryCode:["VE"]},{formats:["+1(284)### ####"],countryCode:["VG"]},{formats:["+1(340)### ####"],countryCode:["VI"]},{formats:["+84 ## #### ###","+84(###)#### ###"],countryCode:["VN"]},{formats:["+678 ## #####","+678 #####"],countryCode:["VU"]},{formats:["+681 ## ####"],countryCode:["WF"]},{formats:["+685 ## ####"],countryCode:["WS"]},{formats:["+967 ### ### ###","+967 # ### ###","+967 ## ### ###"],countryCode:["YE"]},{formats:["+27 ## ### ####"],countryCode:["ZA"]},{formats:["+260 ## ### ####"],countryCode:["ZM"]},{formats:["+263 # ######"],countryCode:["ZW"]},{formats:["+1(###)### ####"],countryCode:["US","CA"]}];function Qa(a){let r;if(a!=null&&a.countryCode){var n;r=((n=na.find(l=>l.countryCode.includes(a.countryCode)))==null?void 0:n.formats)||[]}else r=na.map(({formats:l})=>l).flat();const s=Array.from({length:(a==null?void 0:a.length)||1},(l,f)=>Xa({mask:O(r)}));return y(s,a)}function ae(a){return y(()=>Ga(),a)}var ee=["King Drives","Georgiana Throughway","Antonietta Highway","Elian Road","Reynold Crossing","Max Wall","Lehner Drive","Graham Walks","Buckridge Drives","Schimmel Fields","Doyle Expressway","Cade Forks","Myriam Spur","Fannie Loaf","Dorian Gateway","Ruecker Fields","Daugherty Center","Emerald Key","Jazmyn Isle","Viviane Junctions","Price Spring","Aracely Row","Chyna Plaza","Harmon Lodge","Konopelski Inlet","Dave Stravenue","Goyette Circle","Stokes Wells","Arturo Manors","Schumm Land","Bechtelar Fields","Natalia Points","Dianna Inlet","Curt Locks","Durgan Parkways","Dante Summit","Hilma Mills","Stiedemann Field","Genesis Plaza","Carmelo Plaza","Gutkowski Ferry","Abbott Square","Hodkiewicz Oval","Heathcote Cliff","Calista Via","Kihn Expressway","Caesar Place","Lockman Greens","Brisa Hill","Quigley Parkways","Howell Vista","Fisher Light","Tremblay Springs","Stroman Turnpike","Howell Plaza","Wilma Greens","Adell Mews","Shakira Crossroad","Moises Causeway","Frances Groves","Sammy Creek","Wolf Glen","Fay Corners","Collins Lane","Smitham Drive","Cronin Shoal","Missouri Extension","Leffler Fields","Laurianne Glens","Parker Ways","Benny River","Kreiger Mission","Dameon Mountain","Emard Hill","Quitzon Green","Corwin Mission","Rosendo Spring","Carter Pike","Harber Village","Jade Shore","Dariana Junction","Beer Plaza","Hauck Stream","Joshuah Fork","Rath Walk","Eugenia Heights","Kuphal Mountain","Zboncak Harbor","Torphy Fords","Jocelyn Throughway","Cole Center","Forest Path","Oswald Junction","King Springs","Zulauf Branch","Esteban Inlet","Conner Vista","Zboncak Center","Glover Lights","Rohan Tunnel"];function re(a){return y(ee,a)}function ka(a){return y(()=>`${T({min:0,max:1500})} ${re()}`,a)}function ne(a){return y(()=>{let r=""+T({min:1e4,max:99999});return I()&&(r+="-"+T({min:1e3,max:9999})),r},a)}function oe(a){var r,n;const s=(r=a==null?void 0:a.includeCounty)!=null?r:!0,l=(n=a==null?void 0:a.includeCountry)!=null?n:!0;return y(()=>{const m={street:ka(),city:ha(),zipCode:ne()};return s&&(m.county=Ja()),l&&(m.country=Da()),m},a)}function te(a){var r;const n=(r=a==null?void 0:a.charCount)!=null?r:10;if(n<1||isNaN(n))throw"Character count must be greater than 0";return y(()=>{let l=_();if(n===1)return q();for(;l.length<n;)l+=` ${_()}`;return l=l.substring(0,n-2),l+=`${q()}.`,l},a)}var ie={olympic:["Archery","Artistic Gymnastics","Artistic Swimming","Athletics","Badminton","Baseball Softball","Basketball","Beach Volleyball","BMX Freestyle","BMX Racing","Boxing","Kayak Flatwater","Kayak Slalom","Diving","Equestrian","Fencing","Football","Golf","Handball","Hockey","Judo","Karate","Marathon Swimming","Modern Pentathlon","Mountain Bike","Rhythmic Gymnastics","Road Cycling","Rowing","Rugby","Sailing","Shooting","Skateboarding","Sport Climbing","Surfing","Swimming","Table Tennis","Taekwondo","Tennis","Track Cycling","Trampoline","Triathlon","Volleyball","Water Polo","Weightlifting","Wrestling"],winterOlympic:["Alpine Skiing","Biathlon","Bobsleigh","Cross-Country Skiing","Curling","Figure Skating","Freestyle Skiing","Ice Hockey","Luge","Nordic Combined","Short Track Speed Skating","Skeleton","Ski Jumping","Snowboard","Speed Skating"],outdoor:["Archery","Athletics","Badminton","Baseball","Basketball","Bowling","Boxing","Camping","Canoeing","Climbing","Cricket","Curling","Cycling","Equestrian","Fencing","Football","Golf","Gymnastics","Handball","Hang Gliding","High Jumping","Hockey","Ice Hockey","Judo","Karate","Kite Flying","Monkey Bars","Motorsports","Netball","Rowing","Rugby","Running","Sailing","Skateboarding","Slide","Snow Skiing","Soccer","Street Hockey","Surfing","Swimming","Table Tennis","Tennis","Trekking","Triathlon","Volleyball","Weightlifting","Wrestling"]},oa;(oa=Object.keys(ie))==null||oa.length;var se=["Oklahoma","South Dakota","Massachusetts","Minnesota","Rhode Island","Florida","Delaware","Utah","Maryland","Pennsylvania","West Virginia","Nevada","New York","Alabama","Arizona","Wyoming","Washington","Nebraska","Mississippi","Missouri","Arkansas","Vermont","North Dakota","Iowa","Georgia","Kentucky","Wisconsin","New Hampshire","Hawaii","Idaho","Michigan","Ohio","Colorado","Kansas","Maine","Alaska","Indiana","South Carolina","Oregon","Illinois","Tennessee","California","Virginia","Texas","Montana","New Jersey","North Carolina"];function ue(a){return y(se,a)}function le(a){return y(()=>`${y(["http","https"])}://${W()}.${fa()}`,a)}function ce(a){var r,n;const s=(r=a==null?void 0:a.includeCounty)!=null?r:!0,l=(n=a==null?void 0:a.includeCountry)!=null?n:!0;return y(()=>{const{street:m,city:c,county:e,country:t,zipCode:u}=oe({includeCounty:s,includeCountry:l});let o=`${m}, ${c}, `;return s&&(o+=`${e}, `),l&&(o+=`${t}, `),o+u},a)}const p=Ea,K={},M=de(),F=a=>a<10?`0${a}`:`${a}`;var H={chinese:M,rand(a=0,r=Number.MAX_SAFE_INTEGER){return T({min:a,max:r})},range(a=0,r=10,n=1){const s=[];for(let l=a;l<r;l+=n)s.push(l);return s},bool(){return I()},char(a="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_"){return a[this.rand(0,a.length-1)]},string(a=5,r=20,n="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_"){return[...Array(this.rand(a,r))].map(()=>this.char(n)).join("")},float(a=0,r=Number.MAX_SAFE_INTEGER,n=2){return ga({min:a,max:r,fraction:n})},integer(a=0,r=Number.MAX_SAFE_INTEGER){return T({min:a,max:r})},sentence(a=!1){return a?p(M.words,{length:this.rand(8,18)}).join(""):_()},text(a=!1){return a?p(M.words,{length:this.rand(3,8)}).join(""):te()},word(a=!1){return a?p(M.words):W()},name(a=!1){return a?p(M.firstNames)+p(M.lastNames,this.rand(1,2)).join(""):Ua({withAccents:!1})},firstName(a=!1){return a?p(M.firstNames):X({withAccents:!1})},lastName(a=!1){return a?p(M.lastNames,{length:this.rand(1,2)}).join(""):Q({withAccents:!1})},gender(a=["male","female"]){return this.pick(a)},province(a=!1){return a?p(Object.keys(M.cities)):ue()},city(a=!1){return a?p(p(Object.values(M.cities)).split(",")):ha()},street(a=!1){return a?p(M.area)+p(M.words,{length:this.rand(2,3)}).join("")+"\u8857":ka()},address(a=!1){return a?[p(M.area),p(M.words,{length:this.rand(2,3)}).join(""),"\u8DEF",this.rand(10,999),"\u53F7"].join(""):ce({includeCounty:!1,includeCountry:!1})},avatar(a=100){return Ha({size:a})},image(a="640x480",r="any"){if(!/^\w+x\d+$/i.test(a))throw new Error("Invalid size format.");const n=["animals","arch","nature","people","tech","any"].includes(r)?r:"any",[s,l]=a.toLowerCase().split("x");return`https://placeimg.com/${s}/${l}/${n}`},email(a=ya(),r="com"){return Oa({provider:a,suffix:r,nameSeparator:"_"}).replace("_",this.rand(1,3)===1?"_":"")},ip(){return qa()},phone(a="1##########"){return a==="random"?Qa():a.replace(/#/g,()=>this.rand(0,9))},format(a){if(typeof a!="string")throw new Error("Expect [format] to be a string.");const r=n=>{const[s,l=""]=[n[0],n.slice(1)],f={"#":()=>this.rand(0,9),"!":()=>this.rand(1,9),"@":()=>this.string(1,1,"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"),$:()=>this.string(1,1,`~!@#$%^&*()_-+;'",<>/?\\`),"%":()=>this.string(1,1,`abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ~!@#$%^&*()_-+;'",<>/?\\`)}[s],m=/^\d+$/.test(l)?+l:{"*":this.rand(0,10),"+":this.rand(1,10),"?":this.rand(0,1),"":1}[l];return[...Array(m)].map(()=>f()).join("")};return a.replace(/[#!@]([+*?]|\d+)?/g,r)},url(){return le().replace(/\/+$/g,"")+"/"+W()},guid(){return ae()},datetime(a,r="YYYY-MM-DD",n="HH:mm:ss"){return this.date(a,r)+" "+this.time(a,n)},date(a,r="YYYY-MM-DD"){const n=new Date(a||Date.now()-this.rand(0,1e3)*864e5);return r.replace(/YYYY/g,n.getFullYear()).replace(/MM/g,F(n.getMonth()+1)).replace(/DD/g,F(n.getDate()))},time(a,r="HH:mm:ss"){const n=new Date(a||Date.now()-this.rand(0,864e5));return r.replace(/HH/g,F(n.getHours())).replace(/mm/g,F(n.getMinutes())).replace(/ss/g,F(n.getSeconds()))},bytes(a=""){if(typeof ArrayBuffer=="function"&&typeof Uint8Array=="function"){const r=a||this.string(5,10),n=new ArrayBuffer(r.length),s=new Uint8Array(n);for(let l=0;l<r.length;l++)s[l]=r.charCodeAt(l);return n}return(a||this.string(5,10)).split("").map(r=>r.charCodeAt(0))},pick(a,r=1){return r===1?p(a):p(a,{length:r})},incrementId(a="default",r=1){return typeof a=="number"&&typeof r=="string"&&([a,r]=[r,a]),K.incrementId=K.incrementId||{},K.incrementId[a||"default"]=K.incrementId[a]||r,K.incrementId[a]++},rotate(a,r="default"){if(!a.length)throw new Error("`arr` can not be empty.");return K.rotate=K.rotate||{},K.rotate[r||"default"]=K.rotate[r]||0,a[K.rotate[r]++%a.length]},get shadow(){const a=(n,s)=>new Proxy(n,{apply:function(l,f,m){const c=m.map(e=>JSON.stringify(e)).join(", ");return`faker.${s}(${c})`}});return new Proxy(this,{get(n,s){return typeof n[s]=="function"?a(n[s],s):n[s]}})}};function de(){const a="\u7684\u4E00\u662F\u5728\u4E0D\u4E86\u6709\u548C\u4EBA\u8FD9\u4E2D\u5927\u4E3A\u4E0A\u4E2A\u56FD\u6211\u4EE5\u8981\u4ED6\u65F6\u6765\u7528\u4EEC\u751F\u5230\u4F5C\u5730\u4E8E\u51FA\u5C31\u5206\u5BF9\u6210\u4F1A\u53EF\u4E3B\u53D1\u5E74\u52A8\u540C\u5DE5\u4E5F\u80FD\u4E0B\u8FC7\u5B50\u8BF4\u4EA7\u79CD\u9762\u800C\u65B9\u540E\u591A\u5B9A\u884C\u5B66\u6CD5\u6240\u6C11\u5F97\u7ECF\u5341\u4E09\u4E4B\u8FDB\u7740\u7B49\u90E8\u5EA6\u5BB6\u7535\u529B\u91CC\u5982\u6C34\u5316\u9AD8\u81EA\u4E8C\u7406\u8D77\u5C0F\u7269\u73B0\u5B9E\u52A0\u91CF\u90FD\u4E24\u4F53\u5236\u673A\u5F53\u4F7F\u70B9\u4ECE\u4E1A\u672C\u53BB\u628A\u6027\u597D\u5E94\u5F00\u5B83\u5408\u8FD8\u56E0\u7531\u5176\u4E9B\u7136\u524D\u5916\u5929\u653F\u56DB\u65E5\u90A3\u793E\u4E49\u4E8B\u5E73\u5F62\u76F8\u5168\u8868\u95F4\u6837\u4E0E\u5173\u5404\u91CD\u65B0\u7EBF\u5185\u6570\u6B63\u5FC3\u53CD\u4F60\u660E\u770B\u539F\u53C8\u4E48\u5229\u6BD4\u6216\u4F46\u8D28\u6C14\u7B2C\u5411\u9053\u547D\u6B64\u53D8\u6761\u53EA\u6CA1\u7ED3\u89E3\u95EE\u610F\u5EFA\u6708\u516C\u65E0\u7CFB\u519B\u5F88\u60C5\u8005\u6700\u7ACB\u4EE3\u60F3\u5DF2\u901A\u5E76\u63D0\u76F4\u9898\u515A\u7A0B\u5C55\u4E94\u679C\u6599\u8C61\u5458\u9769\u4F4D\u5165\u5E38\u6587\u603B\u6B21\u54C1\u5F0F\u6D3B\u8BBE\u53CA\u7BA1\u7279\u4EF6\u957F\u6C42\u8001\u5934\u57FA\u8D44\u8FB9\u6D41\u8DEF\u7EA7\u5C11\u56FE\u5C71\u7EDF\u63A5\u77E5\u8F83\u5C06\u7EC4\u89C1\u8BA1\u522B\u5979\u624B\u89D2\u671F\u6839\u8BBA\u8FD0\u519C\u6307\u51E0\u4E5D\u533A\u5F3A\u653E\u51B3\u897F\u88AB\u5E72\u505A\u5FC5\u6218\u5148\u56DE\u5219\u4EFB\u53D6\u636E\u5904\u961F\u5357\u7ED9\u8272\u5149\u95E8\u5373\u4FDD\u6CBB\u5317\u9020\u767E\u89C4\u70ED\u9886\u4E03\u6D77\u53E3\u4E1C\u5BFC\u5668\u538B\u5FD7\u4E16\u91D1\u589E\u4E89\u6D4E\u9636\u6CB9\u601D\u672F\u6781\u4EA4\u53D7\u8054\u4EC0\u8BA4\u516D\u5171\u6743\u6536\u8BC1\u6539\u6E05\u5DF1\u7F8E\u518D\u91C7\u8F6C\u66F4\u5355\u98CE\u5207\u6253\u767D\u6559\u901F\u82B1\u5E26\u5B89\u573A\u8EAB\u8F66\u4F8B\u771F\u52A1\u5177\u4E07\u6BCF\u76EE\u81F3\u8FBE\u8D70\u79EF\u793A\u8BAE\u58F0\u62A5\u6597\u5B8C\u7C7B\u516B\u79BB\u534E\u540D\u786E\u624D\u79D1\u5F20\u4FE1\u9A6C\u8282\u8BDD\u7C73\u6574\u7A7A\u5143\u51B5\u4ECA\u96C6\u6E29\u4F20\u571F\u8BB8\u6B65\u7FA4\u5E7F\u77F3\u8BB0\u9700\u6BB5\u7814\u754C\u62C9\u6797\u5F8B\u53EB\u4E14\u7A76\u89C2\u8D8A\u7EC7\u88C5\u5F71\u7B97\u4F4E\u6301\u97F3\u4F17\u4E66\u5E03\u590D\u5BB9\u513F\u987B\u9645\u5546\u975E\u9A8C\u8FDE\u65AD\u6DF1\u96BE\u8FD1\u77FF\u5343\u5468\u59D4\u7D20\u6280\u5907\u534A\u529E\u9752\u7701\u5217\u4E60\u54CD\u7EA6\u652F\u822C\u53F2\u611F\u52B3\u4FBF\u56E2\u5F80\u9178\u5386\u5E02\u514B\u4F55\u9664\u6D88\u6784\u5E9C\u79F0\u592A\u51C6\u7CBE\u503C\u53F7\u7387\u65CF\u7EF4\u5212\u9009\u6807\u5199\u5B58\u5019\u6BDB\u4EB2\u5FEB\u6548\u65AF\u9662\u67E5\u6C5F\u578B\u773C\u738B\u6309\u683C\u517B\u6613\u7F6E\u6D3E\u5C42\u7247\u59CB\u5374\u4E13\u72B6\u80B2\u5382\u4EAC\u8BC6\u9002\u5C5E\u5706\u5305\u706B\u4F4F\u8C03\u6EE1\u53BF\u5C40\u7167\u53C2\u7EA2\u7EC6\u5F15\u542C\u8BE5\u94C1\u4EF7\u4E25\u9F99\u98DE".split(""),r="\u738B\u674E\u5F20\u5218\u9648\u6768\u9EC4\u5434\u8D75\u5468\u5F90\u5B59\u9A6C\u6731\u80E1\u6797\u90ED\u4F55\u9AD8\u7F57\u90D1\u6881\u8C22\u5B8B\u5510\u8BB8\u9093\u51AF\u97E9\u66F9\u66FE\u5F6D\u8427\u8521\u6F58\u7530\u8463\u987E\u6BDB\u90DD\u9F9A\u90B5\u4E07\u94B1\u4E25\u8D56\u8983\u6D2A\u6B66\u8D3A\u8881\u4E8E\u4F59\u53F6\u848B\u675C\u82CF\u9B4F\u7A0B\u5415\u4E01\u6C88\u4EFB\u59DA\u5362\u5085\u949F\u59DC\u5D14\u8C2D\u5ED6\u8303\u6C6A\u9646\u83AB\u5B54\u91D1\u77F3\u6234\u8D3E\u97E6\u590F\u90B1\u65B9\u4FAF\u90B9\u718A\u5B5F\u79E6\u767D\u6C5F\u960E\u859B\u5C39\u6BB5\u96F7\u9ECE\u53F2\u9F99\u9676".split(""),n="\u7ECD\u9F50\u535A\u6587\u6893\u6668\u80E4\u7965\u745E\u9716\u660E\u54F2\u5929\u7FCA\u51EF\u745E\u5065\u96C4\u8000\u6770\u6F47\u7136\u5B50\u6DB5\u8D8A\u5F6C\u94B0\u8F69\u667A\u8F89\u81F4\u8FDC\u4FCA\u9A70\u96E8\u6CFD\u9A70\u70E8\u78CA\u665F\u777F\u6587\u660A\u4FEE\u6D01\u9ECE\u6615\u8FDC\u822A\u65ED\u5C27\u9E3F\u6D9B\u4F1F\u797A\u8363\u8F69\u8D8A\u6CFD\u6D69\u5B87\u747E\u745C\u7693\u8F69\u64CE\u82CD\u64CE\u5B87\u5FD7\u6CFD\u5B50\u8F69\u777F\u6E0A\u5F18\u6587\u54F2\u701A\u96E8\u6D9B\u6CFD\u6977\u745E\u5EFA\u8F89\u664B\u9E4F\u5929\u78CA\u7ECD\u8F89\u6CFD\u6D0B\u946B\u78CA\u9E4F\u714A\u660A\u5F3A\u4F1F\u5BB8\u535A\u8D85\u541B\u6D69\u5B50\u9A9E\u9E4F\u6D9B\u708E\u5F6C\u9E64\u8F69\u8D8A\u5F6C\u98CE\u534E\u9756\u742A\u660E\u8F89\u4F1F\u8BDA\u742A\u660E\u8F69\u5065\u67CF\u4FEE\u6770\u5FD7\u6CFD\u5F18\u6587\u5CFB\u7199\u5609\u61FF\u715C\u57CE\u61FF\u8F69\u70E8\u4F1F\u82D1\u535A\u4F1F\u6CFD\u71A0\u5F64\u9E3F\u714A\u535A\u6D9B\u70E8\u9716\u70E8\u534E\u715C\u797A\u667A\u5BB8\u6B63\u8C6A\u660A\u7136\u660E\u6D69\u6770\u7ACB\u8BDA\u7ACB\u8F69\u7ACB\u8F89\u5CFB\u7199\u5F18\u6587\u71A0\u5F64\u9E3F\u714A\u70E8\u9716\u54F2\u701A\u946B\u9E4F\u660A\u5929\u601D\u806A\u5C55\u9E4F\u7B11\u611A\u5FD7\u5F3A\u70AB\u660E\u96EA\u677E\u601D\u6E90\u667A\u6E0A\u601D\u6DFC\u6653\u5578\u822A\u5929\u5B87\u6D69\u7136\u6587\u8F69\u9E6D\u6D0B\u632F\u5BB6\u4E50\u9A79\u6653\u535A\u6587\u535A\u660A\u7131\u7ACB\u679C\u91D1\u946B\u9526\u7A0B\u5609\u7199\u9E4F\u98DE\u5B50\u9ED8\u601D\u8FDC\u6D69\u8F69\u8BED\u5802\u806A\u5065\u660E\u6587\u679C\u601D\u9E4F".split(""),s={\u6CB3\u5317\u7701:"\u77F3\u5BB6\u5E84\u5E02,\u5510\u5C71\u5E02,\u79E6\u7687\u5C9B\u5E02,\u90AF\u90F8\u5E02,\u90A2\u53F0\u5E02,\u4FDD\u5B9A\u5E02,\u5F20\u5BB6\u53E3\u5E02,\u627F\u5FB7\u5E02,\u6CA7\u5DDE\u5E02,\u5ECA\u574A\u5E02,\u8861\u6C34\u5E02",\u5C71\u897F\u7701:"\u592A\u539F\u5E02,\u5927\u540C\u5E02,\u9633\u6CC9\u5E02,\u957F\u6CBB\u5E02,\u664B\u57CE\u5E02,\u6714\u5DDE\u5E02,\u664B\u4E2D\u5E02,\u8FD0\u57CE\u5E02,\u5FFB\u5DDE\u5E02,\u4E34\u6C7E\u5E02,\u5415\u6881\u5E02",\u5185\u8499\u53E4\u81EA\u6CBB\u533A:"\u547C\u548C\u6D69\u7279\u5E02,\u5305\u5934\u5E02,\u4E4C\u6D77\u5E02,\u8D64\u5CF0\u5E02,\u901A\u8FBD\u5E02,\u9102\u5C14\u591A\u65AF\u5E02,\u547C\u4F26\u8D1D\u5C14\u5E02,\u5DF4\u5F66\u6DD6\u5C14\u5E02,\u4E4C\u5170\u5BDF\u5E03\u5E02",\u8FBD\u5B81\u7701:"\u6C88\u9633\u5E02,\u5927\u8FDE\u5E02,\u978D\u5C71\u5E02,\u629A\u987A\u5E02,\u672C\u6EAA\u5E02,\u4E39\u4E1C\u5E02,\u9526\u5DDE\u5E02,\u8425\u53E3\u5E02,\u961C\u65B0\u5E02,\u8FBD\u9633\u5E02,\u76D8\u9526\u5E02,\u94C1\u5CAD\u5E02,\u671D\u9633\u5E02,\u846B\u82A6\u5C9B\u5E02",\u5409\u6797\u7701:"\u957F\u6625\u5E02,\u5409\u6797\u5E02,\u56DB\u5E73\u5E02,\u8FBD\u6E90\u5E02,\u901A\u5316\u5E02,\u767D\u5C71\u5E02,\u677E\u539F\u5E02,\u767D\u57CE\u5E02",\u9ED1\u9F99\u6C5F\u7701:"\u54C8\u5C14\u6EE8\u5E02,\u9F50\u9F50\u54C8\u5C14\u5E02,\u9ED1\u6CB3\u5E02,\u5927\u5E86\u5E02,\u4F0A\u6625\u5E02,\u9E64\u5C97\u5E02,\u4F73\u6728\u65AF\u5E02,\u53CC\u9E2D\u5C71\u5E02,\u4E03\u53F0\u6CB3\u5E02,\u9E21\u897F\u5E02,\u7261\u4E39\u6C5F\u5E02,\u7EE5\u5316\u5E02",\u6C5F\u82CF\u7701:"\u5357\u4EAC\u5E02,\u5F90\u5DDE\u5E02,\u8FDE\u4E91\u6E2F\u5E02,\u5BBF\u8FC1\u5E02,\u6DEE\u5B89\u5E02,\u76D0\u57CE\u5E02,\u626C\u5DDE\u5E02,\u6CF0\u5DDE\u5E02,\u5357\u901A\u5E02,\u9547\u6C5F\u5E02,\u5E38\u5DDE\u5E02,\u65E0\u9521\u5E02,\u82CF\u5DDE\u5E02",\u6D59\u6C5F\u7701:"\u676D\u5DDE\u5E02,\u5B81\u6CE2\u5E02,\u6E56\u5DDE\u5E02,\u5609\u5174\u5E02,\u821F\u5C71\u5E02,\u7ECD\u5174\u5E02,\u8862\u5DDE\u5E02,\u91D1\u534E\u5E02,\u53F0\u5DDE\u5E02,\u6E29\u5DDE\u5E02,\u4E3D\u6C34\u5E02",\u5B89\u5FBD\u7701:"\u5408\u80A5\u5E02,\u829C\u6E56\u5E02,\u868C\u57E0\u5E02,\u6DEE\u5357\u5E02,\u9A6C\u978D\u5C71\u5E02,\u6DEE\u5317\u5E02,\u94DC\u9675\u5E02,\u5B89\u5E86\u5E02,\u9EC4\u5C71\u5E02,\u6EC1\u5DDE\u5E02,\u961C\u9633\u5E02,\u5BBF\u5DDE\u5E02,\u516D\u5B89\u5E02,\u4EB3\u5DDE\u5E02,\u6C60\u5DDE\u5E02,\u5BA3\u57CE\u5E02",\u798F\u5EFA\u7701:"\u53A6\u95E8\u5E02,\u798F\u5DDE\u5E02,\u5357\u5E73\u5E02,\u4E09\u660E\u5E02,\u8386\u7530\u5E02,\u6CC9\u5DDE\u5E02,\u6F33\u5DDE\u5E02,\u9F99\u5CA9\u5E02,\u5B81\u5FB7\u5E02\u3002",\u6C5F\u897F\u7701:"\u5357\u660C\u5E02,\u4E5D\u6C5F\u5E02,\u666F\u5FB7\u9547\u5E02,\u9E70\u6F6D\u5E02,\u65B0\u4F59\u5E02,\u840D\u4E61\u5E02,\u8D63\u5DDE\u5E02,\u4E0A\u9976\u5E02,\u629A\u5DDE\u5E02,\u5B9C\u6625\u5E02,\u5409\u5B89\u5E02",\u5C71\u4E1C\u7701:"\u6D4E\u5357\u5E02,\u9752\u5C9B\u5E02,\u5FB7\u5DDE\u5E02,\u4E1C\u8425\u5E02,\u6DC4\u535A\u5E02,\u6F4D\u574A\u5E02,\u70DF\u53F0\u5E02,\u5A01\u6D77\u5E02,\u65E5\u7167\u5E02,\u4E34\u6C82\u5E02,\u67A3\u5E84\u5E02,\u6D4E\u5B81\u5E02,\u6CF0\u5B89\u5E02,\u6EE8\u5DDE\u5E02,\u83CF\u6CFD\u5E02",\u6CB3\u5357\u7701:"\u90D1\u5DDE\u5E02,\u5F00\u5C01\u5E02,\u6D1B\u9633\u5E02,\u5E73\u9876\u5C71\u5E02,\u5B89\u9633\u5E02,\u9E64\u58C1\u5E02,\u65B0\u4E61\u5E02,\u7126\u4F5C\u5E02,\u6FEE\u9633\u5E02,\u8BB8\u660C\u5E02,\u6F2F\u6CB3\u5E02,\u4E09\u95E8\u5CE1\u5E02,\u5357\u9633\u5E02,\u5546\u4E18\u5E02,\u5468\u53E3\u5E02,\u9A7B\u9A6C\u5E97\u5E02,\u4FE1\u9633\u5E02",\u6E56\u5317\u7701:"\u6B66\u6C49\u5E02:,\u5341\u5830\u5E02,\u8944\u9633\u5E02,\u8346\u95E8\u5E02,\u5B5D\u611F\u5E02,\u9EC4\u5188\u5E02,\u9102\u5DDE\u5E02,\u9EC4\u77F3\u5E02,\u54B8\u5B81\u5E02,\u8346\u5DDE\u5E02,\u5B9C\u660C\u5E02,\u968F\u5DDE\u5E02",\u6E56\u5357\u7701:"\u957F\u6C99\u5E02,\u8861\u9633\u5E02,\u5F20\u5BB6\u754C\u5E02,\u5E38\u5FB7\u5E02,\u76CA\u9633\u5E02,\u5CB3\u9633\u5E02,\u682A\u6D32\u5E02,\u6E58\u6F6D\u5E02,\u90F4\u5DDE\u5E02,\u6C38\u5DDE\u5E02,\u90B5\u9633\u5E02,\u6000\u5316\u5E02,\u5A04\u5E95\u5E02",\u5E7F\u4E1C\u7701:"\u5E7F\u5DDE\u5E02,\u6DF1\u5733\u5E02,\u6E05\u8FDC\u5E02,\u97F6\u5173\u5E02,\u6CB3\u6E90\u5E02,\u6885\u5DDE\u5E02,\u6F6E\u5DDE\u5E02,\u6C55\u5934\u5E02,\u63ED\u9633\u5E02,\u6C55\u5C3E\u5E02,\u60E0\u5DDE\u5E02,\u4E1C\u839E\u5E02,\u73E0\u6D77\u5E02,\u4E2D\u5C71\u5E02,\u6C5F\u95E8\u5E02,\u4F5B\u5C71\u5E02,\u8087\u5E86\u5E02,\u4E91\u6D6E\u5E02,\u9633\u6C5F\u5E02,\u8302\u540D\u5E02,\u6E5B\u6C5F\u5E02",\u5E7F\u897F\u58EE\u65CF\u81EA\u6CBB\u533A:"\u5357\u5B81\u5E02,\u6842\u6797\u5E02,\u67F3\u5DDE\u5E02,\u68A7\u5DDE\u5E02,\u8D35\u6E2F\u5E02,\u7389\u6797\u5E02,\u94A6\u5DDE\u5E02,\u5317\u6D77\u5E02,\u9632\u57CE\u6E2F\u5E02,\u5D07\u5DE6\u5E02,\u767E\u8272\u5E02,\u6CB3\u6C60\u5E02,\u6765\u5BBE\u5E02,\u8D3A\u5DDE\u5E02",\u6D77\u5357\u7701:"\u6D77\u53E3\u5E02,\u4E09\u4E9A\u5E02,\u4E09\u6C99\u5E02,\u510B\u5DDE\u5E02",\u56DB\u5DDD\u7701:"\u6210\u90FD\u5E02,\u5E7F\u5143\u5E02,\u7EF5\u9633\u5E02,\u5FB7\u9633\u5E02,\u5357\u5145\u5E02,\u5E7F\u5B89\u5E02,\u9042\u5B81\u5E02,\u5185\u6C5F\u5E02,\u4E50\u5C71\u5E02,\u81EA\u8D21\u5E02,\u6CF8\u5DDE\u5E02,\u5B9C\u5BBE\u5E02,\u6500\u679D\u82B1\u5E02,\u5DF4\u4E2D\u5E02,\u8FBE\u5DDE\u5E02,\u8D44\u9633\u5E02,\u7709\u5C71\u5E02,\u96C5\u5B89\u5E02",\u8D35\u5DDE\u7701:"\u8D35\u9633\u5E02,\u516D\u76D8\u6C34\u5E02,\u9075\u4E49\u5E02,\u5B89\u987A\u5E02,\u6BD5\u8282\u5E02,\u94DC\u4EC1\u5E02",\u4E91\u5357\u7701:"\u6606\u660E\u5E02,\u66F2\u9756\u5E02,\u7389\u6EAA\u5E02,\u4E3D\u6C5F\u5E02,\u662D\u901A\u5E02,\u666E\u6D31\u5E02,\u4E34\u6CA7\u5E02,\u4FDD\u5C71\u5E02",\u9655\u897F\u7701:"\u897F\u5B89\u5E02,\u5EF6\u5B89\u5E02,\u94DC\u5DDD\u5E02,\u6E2D\u5357\u5E02,\u54B8\u9633\u5E02,\u5B9D\u9E21\u5E02,\u6C49\u4E2D\u5E02,\u6986\u6797\u5E02,\u5546\u6D1B\u5E02,\u5B89\u5EB7\u5E02",\u7518\u8083\u7701:"\u5170\u5DDE\u5E02,\u5609\u5CEA\u5173\u5E02,\u91D1\u660C\u5E02,\u767D\u94F6\u5E02,\u5929\u6C34\u5E02,\u9152\u6CC9\u5E02,\u5F20\u6396\u5E02,\u6B66\u5A01\u5E02,\u5E86\u9633\u5E02,\u5E73\u51C9\u5E02,\u5B9A\u897F\u5E02,\u9647\u5357\u5E02",\u9752\u6D77\u7701:"\u897F\u5B81\u5E02,\u6D77\u4E1C\u5E02",\u897F\u85CF\u81EA\u6CBB\u533A:"\u62C9\u8428\u5E02,\u65E5\u5580\u5219\u5E02,\u660C\u90FD\u5E02,\u6797\u829D\u5E02,\u5C71\u5357\u5E02,\u90A3\u66F2\u5E02",\u5B81\u590F\u56DE\u65CF\u81EA\u6CBB\u533A:"\u94F6\u5DDD\u5E02,\u77F3\u5634\u5C71\u5E02,\u5434\u5FE0\u5E02,\u4E2D\u536B\u5E02,\u56FA\u539F\u5E02",\u65B0\u7586\u7EF4\u543E\u5C14\u81EA\u6CBB\u533A:"\u4E4C\u9C81\u6728\u9F50\u5E02,\u514B\u62C9\u739B\u4F9D\u5E02,\u5410\u9C81\u756A\u5E02,\u54C8\u5BC6\u5E02"},l="\u4E1C\u57CE\u533A,\u897F\u57CE\u533A,\u671D\u9633\u533A,\u897F\u6E56\u533A,\u4E1C\u6E56\u533A,\u4E30\u53F0\u533A,\u77F3\u666F\u5C71\u533A,\u6D77\u6DC0\u533A,\u95E8\u5934\u6C9F\u533A,\u623F\u5C71\u533A,\u901A\u5DDE\u533A,\u987A\u4E49\u533A,\u660C\u5E73\u533A,\u5927\u5174\u533A,\u6000\u67D4\u533A,\u5E73\u8C37\u533A".split(",");return{words:a,firstNames:r,lastNames:n,cities:s,area:l}}function me(a,r){if(typeof localStorage=="undefined")return r;const n=t=>({}).toString.call(t)==="[object Object]"||{}.toString.call(t)==="[object Array]";if(!a||typeof a!="string")throw new Error("http-request-mock cacheWrapper: The [cacheKey] must be a non-empty string.");if(!n(r))throw new Error("http-request-mock cacheWrapper: The [mockData] must be an object or array.");if(typeof Proxy!="function"||typeof Reflect!="object")return r;let s=null;const l=()=>{clearTimeout(s),s=setTimeout(()=>localStorage.setItem(a,JSON.stringify(e)),10)},f=(t,u)=>n(t)&&!t.__proxy__?new Proxy(t,u):t,m={get(t,u,o){return u==="__proxy__"?!0:f(Reflect.get(t,u,o),m)},set(t,u,o,i){const d=Reflect.set(t,u,f(o,m),i);return l(),d},deleteProperty(t,u){const o=Reflect.deleteProperty(t,u);return l(),o}},c=a in localStorage,e=f(c?JSON.parse(localStorage.getItem(a)):r,m);return l(),e}const he=[...Array(50)].map(()=>({id:H.incrementId("users",1),name:H.name(),age:H.integer(18,30),email:H.email(),phone:H.phone("###-###-####"),gender:H.gender(),createdTime:H.datetime()}));var ye=me("mock-users",he);export{H as f,ye as u};
